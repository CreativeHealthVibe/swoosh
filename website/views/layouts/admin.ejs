<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/admin.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="admin-body">
  <!-- Sidebar -->
  <div class="admin-sidebar">
    <div class="sidebar-header">
      <img src="/images/swoosh-logo.png" alt="SWOOSH Bot Logo" class="sidebar-logo">
      <h3>SWOOSH Admin</h3>
    </div>
    
    <div class="sidebar-user">
      <% if (user && user.avatar) { %>
        <img src="https://cdn.discordapp.com/avatars/<%= user.id %>/<%= user.avatar %>.png" alt="User Avatar" class="user-avatar">
      <% } else { %>
        <div class="user-avatar-placeholder">
          <i class="fas fa-user"></i>
        </div>
      <% } %>
      <div class="user-details">
        <span class="user-name"><%= user ? user.username : 'Unknown User' %></span>
        <span class="user-tag">Administrator</span>
      </div>
    </div>
    
    <ul class="sidebar-nav">
      <li class="nav-item">
        <a href="/admin/dashboard" class="nav-link <%= path === '/admin/dashboard' ? 'active' : '' %>">
          <i class="fas fa-tachometer-alt"></i> Dashboard
        </a>
      </li>
      <li class="nav-item">
        <a href="/admin/blacklist" class="nav-link <%= path === '/admin/blacklist' ? 'active' : '' %>">
          <i class="fas fa-ban"></i> Blacklist Management
        </a>
      </li>
      <li class="nav-item">
        <a href="/admin/settings" class="nav-link <%= path === '/admin/settings' ? 'active' : '' %>">
          <i class="fas fa-cog"></i> Bot Settings
        </a>
      </li>
      <li class="nav-item">
        <a href="/admin/logs" class="nav-link <%= path === '/admin/logs' ? 'active' : '' %>">
          <i class="fas fa-file-alt"></i> Bot Logs
        </a>
      </li>
      <li class="nav-item">
        <a href="/admin/stats" class="nav-link <%= path === '/admin/stats' ? 'active' : '' %>">
          <i class="fas fa-chart-bar"></i> Statistics
        </a>
      </li>
      <li class="nav-divider"></li>
      <li class="nav-item">
        <a href="/auth/logout" class="nav-link">
          <i class="fas fa-sign-out-alt"></i> Logout
        </a>
      </li>
    </ul>
  </div>
  
  <!-- Main content -->
  <div class="admin-content">
    <div class="admin-header">
      <div class="header-title">
        <h2><%= title.split('|')[0].trim() %></h2>
      </div>
      <div class="header-actions">
        <span class="connection-status">
          <i class="fas fa-circle"></i> Bot Status: <span id="botStatusText">Connecting...</span>
        </span>
        <a href="/" class="btn btn-sm btn-outline-primary me-2" target="_blank">
          <i class="fas fa-globe"></i> View Website
        </a>
        <div class="dropdown">
          <button class="btn btn-sm btn-primary dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-user"></i> <%= user ? user.username : 'User' %>
          </button>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
            <li><a class="dropdown-item" href="/auth/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
          </ul>
        </div>
      </div>
    </div>
    
    <!-- Flash messages -->
    <% if (typeof messages !== 'undefined' && Object.keys(messages).length > 0) { %>
      <div class="messages-container">
        <% if (messages.error) { %>
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> <%= messages.error %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% } %>
        <% if (messages.success) { %>
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> <%= messages.success %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% } %>
      </div>
    <% } %>
    
    <!-- Main content area -->
    <div class="admin-main">
      <%- body %>
    </div>
    
    <div class="admin-footer">
      <div class="footer-left">
        &copy; <%= new Date().getFullYear() %> SWOOSH Bot
      </div>
      <div class="footer-right">
        <span>Version 1.0.0</span> | <a href="https://discord.gg/your-invite" target="_blank">Discord</a> | <a href="https://github.com/your-repo" target="_blank">GitHub</a>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // WebSocket connection to get real-time bot status
    const botStatusText = document.getElementById('botStatusText');
    const statusIndicator = document.querySelector('.connection-status i');
    
    // Connect to WebSocket server
    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
    const wsUrl = `${protocol}//${window.location.host}/ws`;
    const socket = new WebSocket(wsUrl);
    
    // Socket event handlers
    socket.onopen = function() {
      console.log('WebSocket connected');
      botStatusText.textContent = 'Connected';
      statusIndicator.classList.remove('disconnected');
      statusIndicator.classList.add('connected');
    };
    
    socket.onclose = function() {
      console.log('WebSocket disconnected');
      botStatusText.textContent = 'Disconnected';
      statusIndicator.classList.remove('connected');
      statusIndicator.classList.add('disconnected');
    };
    
    socket.onerror = function(error) {
      console.error('WebSocket error:', error);
      botStatusText.textContent = 'Error';
      statusIndicator.classList.remove('connected');
      statusIndicator.classList.add('disconnected');
    };
    
    socket.onmessage = function(event) {
      try {
        const data = JSON.parse(event.data);
        botStatusText.textContent = 'Online';
        statusIndicator.classList.remove('disconnected');
        statusIndicator.classList.add('connected');
        
        // Update dashboard stats if they exist
        updateDashboardStats(data);
      } catch (error) {
        console.error('Error parsing WebSocket message:', error);
      }
    };
    
    function updateDashboardStats(data) {
      // Check if dashboard stats elements exist
      const cpuStat = document.getElementById('cpuStat');
      const memoryStat = document.getElementById('memoryStat');
      const pingStat = document.getElementById('pingStat');
      const uptimeStat = document.getElementById('uptimeStat');
      const serversStat = document.getElementById('serversStat');
      const usersStat = document.getElementById('usersStat');
      
      if (cpuStat) cpuStat.textContent = `${data.cpu}%`;
      if (memoryStat) memoryStat.textContent = `${data.memory}%`;
      if (pingStat) pingStat.textContent = `${data.ping}ms`;
      if (serversStat) serversStat.textContent = data.servers;
      if (usersStat) usersStat.textContent = data.users;
      
      if (uptimeStat) {
        // Format uptime
        const seconds = data.uptime;
        const days = Math.floor(seconds / 86400);
        const hours = Math.floor((seconds % 86400) / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        uptimeStat.textContent = `${days}d ${hours}h ${minutes}m`;
      }
      
      // Update all charts if they exist
      updateCharts(data);
    }
    
    function updateCharts(data) {
      // Update specific charts on different pages
      // For example, if there's a commandChart, update it with data.commandUsage
    }
    
    // Auto-dismiss alerts after 5 seconds
    setTimeout(() => {
      const alerts = document.querySelectorAll('.alert');
      alerts.forEach(alert => {
        const bsAlert = new bootstrap.Alert(alert);
        bsAlert.close();
      });
    }, 5000);
  </script>
</body>
</html>

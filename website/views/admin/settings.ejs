<%- include('../partials/admin-header-fixed.ejs') %>

<div class="admin-page-header">
  <div class="header-content">
    <h1><i class="fas fa-cog"></i> Bot Settings</h1>
    <p>Configure bot behavior and administration settings</p>
  </div>
</div>

<% if (messages.success) { %>
<div class="alert alert-success alert-dismissible fade show" role="alert">
  <%= messages.success %>
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
<% } %>

<% if (messages.error) { %>
<div class="alert alert-danger alert-dismissible fade show" role="alert">
  <%= messages.error %>
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
<% } %>

<div class="settings-container">
  <!-- Bot Settings -->
  <div class="card">
    <div class="card-header">
      <h5 class="card-title">Bot Configuration</h5>
    </div>
    <div class="card-body">
      <form id="botSettingsForm" action="/admin/settings/update" method="POST">
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label for="prefix" class="form-label">Command Prefix</label>
              <input type="text" class="form-control" id="prefix" name="prefix" value="<%= config.prefix %>" maxlength="3">
              <small class="form-text text-muted">Character used before commands (e.g., .help)</small>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="mb-3">
              <label for="embedColor" class="form-label">Embed Color</label>
              <input type="color" class="form-control form-control-color" id="embedColor" name="embedColor" value="<%= config.embedColor %>">
              <small class="form-text text-muted">Color used for message embeds</small>
            </div>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-12">
            <div class="mb-3">
              <label for="ticketCategory" class="form-label">Ticket Category</label>
              <input type="text" class="form-control" id="ticketCategory" name="ticketCategory" value="<%= config.ticketCategory %>">
              <small class="form-text text-muted">Discord category for new tickets</small>
            </div>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-12">
            <div class="mb-3">
              <label for="logChannelId" class="form-label">Log Channel ID</label>
              <input type="text" class="form-control" id="logChannelId" name="logChannelId" value="<%= config.logChannelId %>" placeholder="Discord Channel ID">
              <small class="form-text text-muted">Main channel for sending log messages</small>
            </div>
          </div>
        </div>
        
        <!-- Logging Channels Section (included in the same form) -->
        <h5 class="mt-4 mb-3">Logging Channels</h5>
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label for="deletedMessages" class="form-label">Deleted Messages</label>
              <input type="text" class="form-control" id="deletedMessages" name="deletedMessages" value="<%= config.loggingChannels.deletedMessages %>" placeholder="Channel ID">
              <small class="form-text text-muted">Channel for logging deleted messages</small>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="mb-3">
              <label for="ticketTranscripts" class="form-label">Ticket Transcripts</label>
              <input type="text" class="form-control" id="ticketTranscripts" name="ticketTranscripts" value="<%= config.loggingChannels.ticketTranscripts %>" placeholder="Channel ID">
              <small class="form-text text-muted">Channel for storing ticket transcripts</small>
            </div>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label for="commandUsage" class="form-label">Command Usage</label>
              <input type="text" class="form-control" id="commandUsage" name="commandUsage" value="<%= config.loggingChannels.commandUsage %>" placeholder="Channel ID">
              <small class="form-text text-muted">Channel for logging command usage</small>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="mb-3">
              <label for="botStatus" class="form-label">Bot Status</label>
              <input type="text" class="form-control" id="botStatus" name="botStatus" value="<%= config.loggingChannels.botStatus %>" placeholder="Channel ID">
              <small class="form-text text-muted">Channel for bot status updates</small>
            </div>
          </div>
        </div>
        
        <!-- Validation Settings (included in the same form) -->
        <h5 class="mt-4 mb-3">Validation Settings</h5>
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label for="bountyMin" class="form-label">Minimum Bounty</label>
              <input type="number" class="form-control" id="bountyMin" name="bountyMin" value="<%= config.validation.bountyMin %>" min="1">
              <small class="form-text text-muted">Minimum allowed bounty amount</small>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="mb-3">
              <label for="bountyMax" class="form-label">Maximum Bounty</label>
              <input type="number" class="form-control" id="bountyMax" name="bountyMax" value="<%= config.validation.bountyMax %>" min="100">
              <small class="form-text text-muted">Maximum allowed bounty amount</small>
            </div>
          </div>
        </div>
        
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save me-2"></i> Save All Changes
        </button>
      </form>
    </div>
  </div>
  
  <!-- Staff Roles -->
  <div class="card mt-4">
    <div class="card-header">
      <h5 class="card-title">Staff Roles</h5>
    </div>
    <div class="card-body">
      <p class="text-muted">Roles that have access to tickets and administrative commands.</p>
      
      <div id="staffRoles" class="role-list">
        <% config.staffRoles.forEach(role => { %>
        <div class="role-item">
          <span class="role-name"><%= role %></span>
          <button class="btn btn-sm btn-outline-danger" disabled>
            <i class="fas fa-times"></i>
          </button>
        </div>
        <% }); %>
      </div>
      
      <div class="mt-3">
        <div class="input-group">
          <input type="text" class="form-control" placeholder="Add new role" disabled>
          <button class="btn btn-outline-primary" type="button" disabled>
            <i class="fas fa-plus"></i> Add
          </button>
        </div>
        <small class="form-text text-muted">Note: Staff role management will be implemented in a future update.</small>
      </div>
    </div>
  </div>
  
  <!-- News Updates -->
  <div class="card mt-4">
    <div class="card-header">
      <h5 class="card-title">üì¢ News Updates</h5>
    </div>
    <div class="card-body">
      <p class="text-muted mb-3">Send news updates to the configured news channel</p>
      
      <form id="newsForm" action="/admin/settings/send-news" method="POST">
        <div class="mb-3">
          <label for="newsTitle" class="form-label">Title</label>
          <input type="text" class="form-control" id="newsTitle" name="newsTitle" required maxlength="100" placeholder="Announcement title">
        </div>
        
        <div class="mb-3">
          <label for="newsContent" class="form-label">Content</label>
          <textarea class="form-control" id="newsContent" name="newsContent" rows="4" required placeholder="News content with detailed information..."></textarea>
        </div>
        
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label for="newsColor" class="form-label">Color</label>
              <input type="color" class="form-control form-control-color" id="newsColor" name="newsColor" value="#5865F2">
              <small class="form-text text-muted">Color for the news embed</small>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="mb-3">
              <label for="newsImage" class="form-label">Image URL (Optional)</label>
              <input type="url" class="form-control" id="newsImage" name="newsImage" placeholder="https://example.com/image.png">
              <small class="form-text text-muted">Image to display with the news</small>
            </div>
          </div>
        </div>
        
        <div class="text-end">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-paper-plane me-2"></i> Send News
          </button>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Send Messages -->
  <div class="card mt-4">
    <div class="card-header">
      <h5 class="card-title">‚úâÔ∏è Send Bot Messages</h5>
    </div>
    <div class="card-body">
      <p class="text-muted mb-3">Send messages as the bot to any channel in your servers</p>
      
      <form id="sendMessageForm" action="/admin/settings/send-message" method="POST">
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label for="serverSelect" class="form-label">Server</label>
              <select class="form-select" id="serverSelect" name="serverId" required>
                <option value="" selected disabled>Select a server</option>
                <% if (servers && servers.length > 0) { %>
                  <% servers.forEach(server => { %>
                    <option value="<%= server.id %>"><%= server.name %></option>
                  <% }); %>
                <% } else { %>
                  <option value="" disabled>No servers available</option>
                <% } %>
              </select>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="mb-3">
              <label for="channelSelect" class="form-label">Channel</label>
              <select class="form-select" id="channelSelect" name="channelId" required disabled>
                <option value="" selected disabled>Select a server first</option>
              </select>
            </div>
          </div>
        </div>
        
        <div class="mb-3">
          <label for="messageContent" class="form-label">Message Content</label>
          <textarea class="form-control" id="messageContent" name="messageContent" rows="4" required placeholder="Enter your message here..."></textarea>
        </div>
        
        <div class="form-check mb-3">
          <input class="form-check-input" type="checkbox" id="embedMessage" name="embedMessage">
          <label class="form-check-label" for="embedMessage">
            Send as embed
          </label>
        </div>
        
        <div class="text-end">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-robot me-2"></i> Send as Bot
          </button>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Admin Users -->
  <div class="card mt-4">
    <div class="card-header">
      <h5 class="card-title">Admin Access</h5>
    </div>
    <div class="card-body">
      <h6 class="mb-3">Admin Users</h6>
      <p class="text-muted mb-4">Users with full access to the admin dashboard</p>
      
      <div id="adminUsers" class="admin-users-list mb-4">
        <% for (const userId of config.adminUserIds) { %>
          <div class="admin-user-item">
            <div class="admin-user-info">
              <div class="admin-user-id"><%= userId %></div>
              <div class="admin-user-role">Full Administrator</div>
            </div>
            <form action="/admin/users/remove" method="POST" class="d-inline">
              <input type="hidden" name="userId" value="<%= userId %>">
              <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to remove this admin user?')">
                <i class="fas fa-times"></i> Remove
              </button>
            </form>
          </div>
        <% } %>
      </div>
      
      <div class="admin-action-section">
        <form action="/admin/users/add" method="POST" class="admin-add-form">
          <div class="row g-3 align-items-end">
            <div class="col-md-5">
              <label for="userId" class="form-label">Discord User ID</label>
              <input type="text" class="form-control" id="userId" name="userId" placeholder="Enter Discord ID" required pattern="^\d{17,19}$">
            </div>
            <div class="col-md-5">
              <label for="comment" class="form-label">User Description</label>
              <input type="text" class="form-control" id="comment" name="comment" placeholder="e.g. Moderator, Developer" required>
            </div>
            <div class="col-md-2">
              <button type="submit" class="btn btn-primary w-100">
                <i class="fas fa-plus-circle"></i> Add Admin
              </button>
            </div>
          </div>
        </form>
        
        <div class="special-action mt-4">
          <div class="card bg-light">
            <div class="card-body">
              <h6 class="card-title mb-3">Create Special Admin Account</h6>
              <p class="card-text text-muted small">This special action is only available to you</p>
              <a href="/admin/users" class="btn btn-outline-primary">
                <i class="fas fa-user-plus"></i> Create Special Admin Account
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .admin-users-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  
  .admin-user-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 16px;
    background-color: var(--bs-light);
    border-radius: 8px;
    border-left: 4px solid #5865F2;
  }
  
  .admin-user-info {
    display: flex;
    flex-direction: column;
  }
  
  .admin-user-id {
    font-weight: 600;
    font-family: 'Courier New', monospace;
  }
  
  .admin-user-role {
    font-size: 0.85rem;
    color: var(--bs-primary);
  }
  
  .admin-action-section {
    border-top: 1px solid var(--bs-gray-200);
    padding-top: 20px;
  }
  
  .admin-add-form {
    background-color: var(--bs-light);
    padding: 16px;
    border-radius: 8px;
    margin-bottom: 12px;
  }
  
  .special-action .card {
    border-left: 4px solid #FFC107;
  }
</style>

<script>
  // Real-time validation
  document.getElementById('bountyMin').addEventListener('change', function(e) {
    const min = parseInt(e.target.value);
    const max = parseInt(document.getElementById('bountyMax').value);
    
    if (min >= max) {
      alert('Minimum bounty must be less than maximum bounty');
      e.target.value = <%= config.validation.bountyMin %>;
    }
  });
  
  document.getElementById('bountyMax').addEventListener('change', function(e) {
    const max = parseInt(e.target.value);
    const min = parseInt(document.getElementById('bountyMin').value);
    
    if (max <= min) {
      alert('Maximum bounty must be greater than minimum bounty');
      e.target.value = <%= config.validation.bountyMax %>;
    }
  });
  
  // Form submission confirmation
  document.getElementById('botSettingsForm').addEventListener('submit', function(e) {
    if (!confirm('Are you sure you want to update the bot configuration? This will restart the bot.')) {
      e.preventDefault();
    }
  });
  
  // Server/Channel Selection Logic for Message Sending
  document.getElementById('serverSelect').addEventListener('change', function() {
    const serverId = this.value;
    const channelSelect = document.getElementById('channelSelect');
    
    if (!serverId) {
      channelSelect.disabled = true;
      channelSelect.innerHTML = '<option value="" selected disabled>Select a server first</option>';
      return;
    }
    
    // Enable the channel select and show loading
    channelSelect.disabled = true;
    channelSelect.innerHTML = '<option value="" selected disabled>Loading channels...</option>';
    
    // Fetch channels for the selected server
    fetch(`/api/servers/${serverId}/channels`)
      .then(response => response.json())
      .then(data => {
        channelSelect.innerHTML = ''; // Clear options
        
        // Add default option
        const defaultOption = document.createElement('option');
        defaultOption.value = '';
        defaultOption.disabled = true;
        defaultOption.selected = true;
        defaultOption.textContent = 'Select a channel';
        channelSelect.appendChild(defaultOption);
        
        // Add channel options
        if (data.channels && data.channels.length > 0) {
          // Group channels by category
          const categories = {};
          const uncategorized = [];
          
          data.channels.forEach(channel => {
            if (channel.type === 0) { // Text channels only
              if (channel.parent_id) {
                if (!categories[channel.parent_id]) {
                  categories[channel.parent_id] = {
                    name: channel.parent_name || 'Unknown Category',
                    channels: []
                  };
                }
                categories[channel.parent_id].channels.push(channel);
              } else {
                uncategorized.push(channel);
              }
            }
          });
          
          // Add categorized channels
          Object.keys(categories).forEach(categoryId => {
            const category = categories[categoryId];
            const group = document.createElement('optgroup');
            group.label = category.name;
            
            category.channels.forEach(channel => {
              const option = document.createElement('option');
              option.value = channel.id;
              option.textContent = `#${channel.name}`;
              group.appendChild(option);
            });
            
            channelSelect.appendChild(group);
          });
          
          // Add uncategorized channels
          if (uncategorized.length > 0) {
            const group = document.createElement('optgroup');
            group.label = 'No Category';
            
            uncategorized.forEach(channel => {
              const option = document.createElement('option');
              option.value = channel.id;
              option.textContent = `#${channel.name}`;
              group.appendChild(option);
            });
            
            channelSelect.appendChild(group);
          }
        } else {
          // No channels found
          const option = document.createElement('option');
          option.value = '';
          option.disabled = true;
          option.textContent = 'No text channels available';
          channelSelect.appendChild(option);
        }
        
        channelSelect.disabled = false;
      })
      .catch(error => {
        console.error('Error fetching channels:', error);
        channelSelect.innerHTML = '<option value="" selected disabled>Error loading channels</option>';
        channelSelect.disabled = false;
      });
  });
  
  // News form validation
  document.getElementById('newsForm').addEventListener('submit', function(e) {
    if (!confirm('Are you sure you want to send this news update?')) {
      e.preventDefault();
      return;
    }
  });
  
  // Message form validation
  document.getElementById('sendMessageForm').addEventListener('submit', function(e) {
    const channelSelect = document.getElementById('channelSelect');
    if (channelSelect.value === '') {
      e.preventDefault();
      alert('Please select a channel');
      return;
    }
    
    if (!confirm('Are you sure you want to send this message as the bot?')) {
      e.preventDefault();
      return;
    }
  });
</script>

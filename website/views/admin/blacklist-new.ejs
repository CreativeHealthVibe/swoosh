<%- include('../partials/admin-header-fixed') %>

<div class="blacklist-container">
  <div class="admin-page-header">
    <div class="header-content">
      <h1><i class="fas fa-user-slash"></i> Blacklist Management</h1>
      <p>Manage users who are blacklisted from using the bot</p>
    </div>
  </div>

  <div class="row">
    <div class="col-md-4">
      <div class="custom-card gradient-border">
        <div class="card-header-custom">
          <h5 class="card-title">Add to Blacklist</h5>
          <div class="card-icon">
            <i class="fas fa-user-slash"></i>
          </div>
        </div>
        <div class="card-body-custom">
          <form action="/admin/blacklist/add" method="POST">
            <div class="form-group">
              <label for="userId" class="form-label">User ID</label>
              <div class="input-group">
                <div class="input-group-prepend">
                  <span class="input-group-text"><i class="fas fa-id-card"></i></span>
                </div>
                <input type="text" class="form-control" id="userId" name="userId" placeholder="Enter Discord user ID" required pattern="^\d{17,19}$">
              </div>
              <small class="form-text text-muted">The Discord user ID must be 17-19 digits</small>
            </div>
            
            <div class="form-group">
              <label for="reason" class="form-label">Reason</label>
              <div class="input-group">
                <div class="input-group-prepend">
                  <span class="input-group-text"><i class="fas fa-comment-alt"></i></span>
                </div>
                <input type="text" class="form-control" id="reason" name="reason" placeholder="Reason for blacklisting" required>
              </div>
              <small class="form-text text-muted">Provide a reason for adding user to blacklist</small>
            </div>
            
            <div class="form-group">
              <label for="type" class="form-label">Blacklist Type</label>
              <select class="custom-select" id="type" name="type" required>
                <option value="global">Global Blacklist</option>
                <option value="commands">Commands Only</option>
                <option value="features">Features Only</option>
              </select>
              <small class="form-text text-muted">Select the type of blacklist to apply</small>
            </div>
            
            <button type="submit" class="btn btn-primary btn-block">
              <i class="fas fa-plus-circle"></i> Add to Blacklist
            </button>
          </form>
        </div>
      </div>
      
      <div class="custom-card gradient-border mt-4">
        <div class="card-header-custom">
          <h5 class="card-title">Filter Blacklist</h5>
          <div class="card-icon">
            <i class="fas fa-filter"></i>
          </div>
        </div>
        <div class="card-body-custom">
          <form id="filterForm">
            <div class="form-group">
              <label for="filterType" class="form-label">Filter by Type</label>
              <select class="custom-select" id="filterType">
                <option value="all">All Types</option>
                <option value="global">Global Blacklist</option>
                <option value="commands">Commands Only</option>
                <option value="features">Features Only</option>
              </select>
            </div>
            
            <div class="form-group">
              <label for="search" class="form-label">Search</label>
              <div class="input-group">
                <div class="input-group-prepend">
                  <span class="input-group-text"><i class="fas fa-search"></i></span>
                </div>
                <input type="text" class="form-control" id="search" placeholder="Search by ID or reason">
              </div>
            </div>
            
            <button type="button" id="clearFilter" class="btn btn-secondary btn-block">
              <i class="fas fa-times"></i> Clear Filter
            </button>
          </form>
        </div>
      </div>
    </div>
    
    <div class="col-md-8">
      <div class="custom-card gradient-border">
        <div class="card-header-custom">
          <h5 class="card-title">Blacklisted Users</h5>
          <div class="card-icon">
            <i class="fas fa-list"></i>
          </div>
        </div>
        <div class="card-body-custom">
          <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="fas fa-info-circle"></i> Users on the blacklist will be prevented from using bot features according to their blacklist type.
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          
          <div class="table-responsive blacklist-table-container">
            <table class="table table-hover blacklist-table" id="blacklistTable">
              <thead>
                <tr>
                  <th scope="col">User ID</th>
                  <th scope="col">Type</th>
                  <th scope="col">Reason</th>
                  <th scope="col">Added At</th>
                  <th scope="col">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (blacklistedUsers.length === 0) { %>
                  <tr>
                    <td colspan="5" class="text-center">No users have been blacklisted</td>
                  </tr>
                <% } else { %>
                  <% blacklistedUsers.forEach(user => { %>
                    <tr data-type="<%= user.type %>">
                      <td class="user-id"><%= user.userId %></td>
                      <td>
                        <% if (user.type === 'global') { %>
                          <span class="badge badge-danger">Global</span>
                        <% } else if (user.type === 'commands') { %>
                          <span class="badge badge-warning">Commands</span>
                        <% } else if (user.type === 'features') { %>
                          <span class="badge badge-info">Features</span>
                        <% } else { %>
                          <span class="badge badge-secondary"><%= user.type %></span>
                        <% } %>
                      </td>
                      <td class="reason"><%= user.reason %></td>
                      <td><%= new Date(user.addedAt).toLocaleString() %></td>
                      <td>
                        <div class="btn-group" role="group">
                          <form action="/admin/blacklist/remove" method="POST" class="d-inline">
                            <input type="hidden" name="userId" value="<%= user.userId %>">
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to remove <%= user.userId %> from the blacklist?')">
                              <i class="fas fa-trash-alt"></i>
                            </button>
                          </form>
                          <button type="button" class="btn btn-sm btn-info copy-id" data-id="<%= user.userId %>">
                            <i class="fas fa-copy"></i>
                          </button>
                        </div>
                      </td>
                    </tr>
                  <% }); %>
                <% } %>
              </tbody>
            </table>
          </div>
          
          <% if (blacklistedUsers.length > 0) { %>
            <div class="d-flex justify-content-between align-items-center mt-3">
              <div>
                <span class="text-muted">Total: <%= blacklistedUsers.length %> user<%= blacklistedUsers.length !== 1 ? 's' : '' %></span>
              </div>
              <form action="/admin/blacklist/clear" method="POST" class="d-inline">
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to clear the entire blacklist? This action cannot be undone.')">
                  <i class="fas fa-exclamation-triangle"></i> Clear All Blacklisted Users
                </button>
              </form>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="toast-container" id="toastContainer">
  <!-- Toast notifications will appear here -->
</div>

<style>
  .blacklist-container {
    padding: 15px;
  }
  
  .admin-page-header {
    background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
    color: white;
    padding: 25px;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .admin-page-header h1 {
    margin: 0;
    font-size: 24px;
    font-weight: 600;
    display: flex;
    align-items: center;
  }
  
  .admin-page-header h1 i {
    margin-right: 10px;
  }
  
  .admin-page-header p {
    margin: 5px 0 0 0;
    opacity: 0.8;
  }
  
  .custom-card {
    background: var(--card-bg);
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.08);
    overflow: hidden;
    height: 100%;
  }
  
  .gradient-border {
    position: relative;
  }
  
  .gradient-border::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #ff0844 0%, #ffb199 100%);
  }
  
  .card-header-custom {
    padding: 15px 20px;
    background: var(--card-header-bg);
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--border-color);
  }
  
  .card-header-custom h5 {
    margin: 0;
    font-weight: 600;
  }
  
  .card-icon {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, #ff0844 0%, #ffb199 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.25rem;
  }
  
  .card-body-custom {
    padding: 20px;
  }
  
  .form-label {
    font-weight: 500;
    margin-bottom: 5px;
  }
  
  .blacklist-table-container {
    max-height: 500px;
    overflow-y: auto;
  }
  
  .blacklist-table {
    margin-bottom: 0;
  }
  
  .blacklist-table th {
    position: sticky;
    top: 0;
    background: var(--card-header-bg);
    z-index: 1;
  }
  
  .blacklist-table .user-id {
    font-family: monospace;
    font-weight: 600;
  }
  
  .toast-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 9999;
  }
  
  .custom-toast {
    background: white;
    max-width: 350px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    border-radius: 6px;
    margin-top: 10px;
    overflow: hidden;
    animation: slideIn 0.3s ease-out forwards;
  }
  
  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .toast-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 15px;
    background: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
  }
  
  .toast-body {
    padding: 15px;
  }
  
  @media (max-width: 767px) {
    .row > div:first-child {
      margin-bottom: 20px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Copy User ID functionality
    document.querySelectorAll('.copy-id').forEach(button => {
      button.addEventListener('click', function() {
        const userId = this.getAttribute('data-id');
        navigator.clipboard.writeText(userId).then(() => {
          showToast('User ID Copied', 'User ID has been copied to clipboard');
        });
      });
    });
    
    // Filter functionality
    const searchInput = document.getElementById('search');
    const filterType = document.getElementById('filterType');
    const clearFilterBtn = document.getElementById('clearFilter');
    const table = document.getElementById('blacklistTable');
    const tableRows = table.querySelectorAll('tbody tr');
    
    function applyFilter() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedType = filterType.value;
      
      tableRows.forEach(row => {
        const userId = row.querySelector('.user-id').textContent.toLowerCase();
        const reason = row.querySelector('.reason').textContent.toLowerCase();
        const type = row.getAttribute('data-type');
        
        const matchesSearch = userId.includes(searchTerm) || reason.includes(searchTerm);
        const matchesType = selectedType === 'all' || type === selectedType;
        
        row.style.display = matchesSearch && matchesType ? '' : 'none';
      });
    }
    
    searchInput.addEventListener('input', applyFilter);
    filterType.addEventListener('change', applyFilter);
    
    clearFilterBtn.addEventListener('click', function() {
      searchInput.value = '';
      filterType.value = 'all';
      applyFilter();
    });
    
    // Toast notification system
    function showToast(title, message) {
      const toastContainer = document.getElementById('toastContainer');
      
      const toast = document.createElement('div');
      toast.className = 'custom-toast';
      
      toast.innerHTML = `
        <div class="toast-header">
          <strong>${title}</strong>
          <button type="button" class="close" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="toast-body">
          ${message}
        </div>
      `;
      
      toastContainer.appendChild(toast);
      
      const closeButton = toast.querySelector('.close');
      closeButton.addEventListener('click', function() {
        toast.remove();
      });
      
      // Auto remove after 5 seconds
      setTimeout(() => {
        toast.style.opacity = '0';
        toast.style.transform = 'translateX(100%)';
        toast.style.transition = 'all 0.3s ease-out';
        
        setTimeout(() => {
          toast.remove();
        }, 300);
      }, 5000);
    }
  });
</script>

<%- include('../partials/admin-header-fixed') %>

<div class="blacklist-container">
  <div class="page-header">
    <div class="header-content">
      <div class="header-title">
        <h1 class="gradient-text"><i class="fas fa-user-slash"></i> Blacklist Management</h1>
        <p>Control who can access your bot features and services</p>
      </div>
      <div class="user-count">
        <div class="count-circle">
          <span><%= blacklistedUsers.length %></span>
        </div>
        <div class="count-label">Blacklisted Users</div>
      </div>
    </div>
  </div>

  <div class="content-grid">
    <div class="sidebar">
      <div class="glass-card add-card">
        <div class="card-header">
          <h2>Add User to Blacklist</h2>
          <div class="card-icon">
            <i class="fas fa-user-slash"></i>
          </div>
        </div>
        <div class="card-body">
          <form action="/admin/blacklist/add" method="POST">
            <div class="form-group">
              <label for="userId" class="form-label">Discord User ID</label>
              <div class="input-group">
                <div class="input-group-icon">
                  <i class="fas fa-id-card"></i>
                </div>
                <input type="text" class="form-control" id="userId" name="userId" placeholder="Enter Discord user ID" required pattern="^\d{17,19}$">
              </div>
              <div class="input-hint">17-19 digit Discord user ID</div>
            </div>
            
            <div class="form-group">
              <label for="reason" class="form-label">Reason</label>
              <div class="input-group">
                <div class="input-group-icon">
                  <i class="fas fa-comment-alt"></i>
                </div>
                <input type="text" class="form-control" id="reason" name="reason" placeholder="Why are they being blacklisted?" required>
              </div>
              <div class="input-hint">Reason for adding to blacklist</div>
            </div>
            
            <div class="form-group">
              <label for="type" class="form-label">Restriction Type</label>
              <div class="select-wrapper">
                <select class="form-control" id="type" name="type" required>
                  <option value="global">Global Blacklist</option>
                  <option value="commands">Commands Only</option>
                  <option value="features">Features Only</option>
                </select>
                <div class="select-arrow"><i class="fas fa-chevron-down"></i></div>
              </div>
              <div class="input-hint">Type of restriction to apply</div>
            </div>
            
            <button type="submit" class="btn primary-btn glow-btn">
              <i class="fas fa-plus-circle"></i> Add to Blacklist
            </button>
          </form>
        </div>
      </div>
      
      <div class="glass-card filter-card">
        <div class="card-header">
          <h2>Filter Results</h2>
          <div class="card-icon">
            <i class="fas fa-filter"></i>
          </div>
        </div>
        <div class="card-body">
          <form id="filterForm">
            <div class="form-group">
              <label for="filterType" class="form-label">Filter by Type</label>
              <div class="select-wrapper">
                <select class="form-control" id="filterType">
                  <option value="all">All Types</option>
                  <option value="global">Global Blacklist</option>
                  <option value="commands">Commands Only</option>
                  <option value="features">Features Only</option>
                </select>
                <div class="select-arrow"><i class="fas fa-chevron-down"></i></div>
              </div>
            </div>
            
            <div class="form-group">
              <label for="search" class="form-label">Search</label>
              <div class="input-group">
                <div class="input-group-icon">
                  <i class="fas fa-search"></i>
                </div>
                <input type="text" class="form-control" id="search" placeholder="Search by ID or reason">
              </div>
            </div>
            
            <button type="button" id="clearFilter" class="btn secondary-btn">
              <i class="fas fa-times"></i> Clear Filters
            </button>
          </form>
        </div>
      </div>
    </div>
    
    <div class="main-content">
      <div class="glass-card users-card">
        <div class="card-header">
          <h2>Blacklisted Users</h2>
          <div class="card-icon">
            <i class="fas fa-list"></i>
          </div>
        </div>
        <div class="card-body">
          <div class="info-alert">
            <div class="alert-icon">
              <i class="fas fa-info-circle"></i>
            </div>
            <div class="alert-content">
              Users on the blacklist will be prevented from using bot features according to their blacklist type.
            </div>
          </div>
          
          <div class="table-container">
            <table class="data-table" id="blacklistTable">
              <thead>
                <tr>
                  <th>User ID</th>
                  <th>Type</th>
                  <th>Reason</th>
                  <th>Added At</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (blacklistedUsers.length === 0) { %>
                  <tr>
                    <td colspan="5">
                      <div class="empty-state">
                        <div class="empty-icon">
                          <i class="fas fa-shield-alt"></i>
                        </div>
                        <h3>No Users Blacklisted</h3>
                        <p>When you add users to the blacklist, they will appear here</p>
                      </div>
                    </td>
                  </tr>
                <% } else { %>
                  <% blacklistedUsers.forEach(user => { %>
                    <tr data-type="<%= user.type %>" class="data-row">
                      <td><div class="user-id"><%= user.userId %></div></td>
                      <td>
                        <% if (user.type === 'global') { %>
                          <div class="badge danger">Global</div>
                        <% } else if (user.type === 'commands') { %>
                          <div class="badge warning">Commands</div>
                        <% } else if (user.type === 'features') { %>
                          <div class="badge info">Features</div>
                        <% } else { %>
                          <div class="badge default"><%= user.type %></div>
                        <% } %>
                      </td>
                      <td><div class="reason"><%= user.reason %></div></td>
                      <td><div class="date"><%= new Date(user.addedAt).toLocaleString() %></div></td>
                      <td>
                        <div class="actions">
                          <form action="/admin/blacklist/remove" method="POST" class="d-inline">
                            <input type="hidden" name="userId" value="<%= user.userId %>">
                            <button type="submit" class="action-btn delete" onclick="return confirm('Are you sure you want to remove <%= user.userId %> from the blacklist?')" title="Remove from blacklist">
                              <i class="fas fa-trash-alt"></i>
                            </button>
                          </form>
                          <button type="button" class="action-btn copy copy-id" data-id="<%= user.userId %>" title="Copy ID">
                            <i class="fas fa-copy"></i>
                          </button>
                        </div>
                      </td>
                    </tr>
                  <% }); %>
                <% } %>
              </tbody>
            </table>
          </div>
          
          <% if (blacklistedUsers.length > 0) { %>
            <div class="table-footer">
              <div class="table-info">
                <span><%= blacklistedUsers.length %> user<%= blacklistedUsers.length !== 1 ? 's' : '' %> blacklisted</span>
              </div>
              <form action="/admin/blacklist/clear" method="POST" class="d-inline">
                <button type="submit" class="btn danger-btn" onclick="return confirm('Are you sure you want to clear the entire blacklist? This action cannot be undone.')">
                  <i class="fas fa-exclamation-triangle"></i> Clear All Users
                </button>
              </form>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="toast-container" id="toastContainer">
  <!-- Toast notifications will appear here -->
</div>

<style>
  :root {
    --primary-color: #9c4dff;
    --primary-light: #bf7fff;
    --primary-hover: #8a43e0;
    --secondary-color: #2a2d3e;
    --background: #1a1c2e;
    --card-bg: rgba(42, 45, 62, 0.7);
    --card-bg-hover: rgba(52, 55, 72, 0.8);
    --text-primary: #ffffff;
    --text-secondary: #b3b9d1;
    --border-radius: 12px;
    --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    --success-color: #28c76f;
    --warning-color: #ff9f43;
    --danger-color: #ea5455;
    --info-color: #00cfe8;
  }
  
  .blacklist-container {
    padding: 2rem;
    background: var(--background);
    min-height: calc(100vh - 64px);
  }
  
  /* Page Header */
  .page-header {
    background: var(--card-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: var(--border-radius);
    border: 1px solid rgba(156, 77, 255, 0.2);
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: var(--card-shadow);
  }
  
  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .header-title h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    font-weight: 700;
    display: flex;
    align-items: center;
  }
  
  .header-title h1 i {
    margin-right: 0.8rem;
    color: var(--primary-color);
  }
  
  .header-title p {
    font-size: 1.1rem;
    color: var(--text-secondary);
    margin: 0;
  }
  
  .gradient-text {
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
  }
  
  .user-count {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .count-circle {
    width: 80px;
    height: 80px;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0.5rem;
    box-shadow: 0 5px 15px rgba(156, 77, 255, 0.3);
  }
  
  .count-circle span {
    font-size: 2.2rem;
    font-weight: 700;
    color: white;
  }
  
  .count-label {
    font-size: 1rem;
    color: var(--text-secondary);
  }
  
  /* Content Grid Layout */
  .content-grid {
    display: grid;
    grid-template-columns: 350px 1fr;
    gap: 1.5rem;
  }
  
  /* Cards */
  .glass-card {
    background: var(--card-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: var(--border-radius);
    overflow: hidden;
    border: 1px solid rgba(156, 77, 255, 0.2);
    box-shadow: var(--card-shadow);
    margin-bottom: 1.5rem;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .glass-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
  }
  
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.2rem 1.5rem;
    background: rgba(42, 45, 62, 0.9);
    border-bottom: 1px solid rgba(156, 77, 255, 0.2);
  }
  
  .card-header h2 {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: var(--text-primary);
  }
  
  .card-icon {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 5px 10px rgba(156, 77, 255, 0.3);
  }
  
  .card-icon i {
    font-size: 1.1rem;
    color: white;
  }
  
  .card-body {
    padding: 1.5rem;
  }
  
  /* Form Elements */
  .form-group {
    margin-bottom: 1.2rem;
  }
  
  .form-label {
    display: block;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
  }
  
  .input-group {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .input-group-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-secondary);
  }
  
  .form-control {
    width: 100%;
    padding: 0.8rem 1rem 0.8rem 2.5rem;
    background: rgba(30, 32, 47, 0.6);
    border: 1px solid rgba(156, 77, 255, 0.2);
    border-radius: 8px;
    color: var(--text-primary);
    font-size: 0.95rem;
    transition: all 0.3s ease;
  }
  
  .form-control:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(156, 77, 255, 0.2);
  }
  
  .input-hint {
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin-top: 0.4rem;
  }
  
  .select-wrapper {
    position: relative;
  }
  
  .select-wrapper .form-control {
    appearance: none;
    padding-right: 2.5rem;
  }
  
  .select-arrow {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-secondary);
    pointer-events: none;
  }
  
  /* Buttons */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    font-size: 0.95rem;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    gap: 0.5rem;
    width: 100%;
  }
  
  .primary-btn {
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    color: white;
    box-shadow: 0 5px 15px rgba(156, 77, 255, 0.3);
  }
  
  .primary-btn:hover {
    background: linear-gradient(135deg, var(--primary-light), var(--primary-color));
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(156, 77, 255, 0.4);
  }
  
  .secondary-btn {
    background: rgba(30, 32, 47, 0.7);
    color: var(--text-secondary);
    border: 1px solid rgba(156, 77, 255, 0.2);
  }
  
  .secondary-btn:hover {
    background: rgba(42, 45, 62, 0.9);
    color: var(--text-primary);
  }
  
  .danger-btn {
    background: linear-gradient(135deg, var(--danger-color), #ff7676);
    color: white;
    box-shadow: 0 5px 15px rgba(234, 84, 85, 0.3);
  }
  
  .danger-btn:hover {
    background: linear-gradient(135deg, #ff5555, var(--danger-color));
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(234, 84, 85, 0.4);
  }
  
  .glow-btn {
    position: relative;
    overflow: hidden;
  }
  
  .glow-btn::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0) 70%);
    transform: scale(0);
    opacity: 0;
    transition: transform 0.6s, opacity 0.6s;
  }
  
  .glow-btn:hover::after {
    transform: scale(1);
    opacity: 1;
  }
  
  /* Table */
  .table-container {
    overflow-x: auto;
    margin: 0 -1.5rem;
    padding: 0 1.5rem;
  }
  
  .data-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    margin-bottom: 1rem;
  }
  
  .data-table thead th {
    padding: 1rem 1.2rem;
    font-weight: 600;
    color: var(--text-primary);
    background: rgba(30, 32, 47, 0.7);
    text-align: left;
    border-bottom: 1px solid rgba(156, 77, 255, 0.2);
    position: sticky;
    top: 0;
    z-index: 10;
  }
  
  .data-table thead th:first-child {
    border-top-left-radius: 8px;
  }
  
  .data-table thead th:last-child {
    border-top-right-radius: 8px;
  }
  
  .data-row {
    background: rgba(30, 32, 47, 0.3);
    transition: background 0.3s ease;
  }
  
  .data-row:hover {
    background: var(--card-bg-hover);
  }
  
  .data-table td {
    padding: 0.8rem 1.2rem;
    border-bottom: 1px solid rgba(156, 77, 255, 0.1);
    color: var(--text-secondary);
  }
  
  .user-id {
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  .date {
    font-size: 0.9rem;
  }
  
  /* Badges */
  .badge {
    display: inline-block;
    padding: 0.3rem 0.8rem;
    border-radius: 50px;
    font-size: 0.8rem;
    font-weight: 600;
    text-align: center;
  }
  
  .badge.danger {
    background: rgba(234, 84, 85, 0.15);
    color: var(--danger-color);
    border: 1px solid rgba(234, 84, 85, 0.3);
  }
  
  .badge.warning {
    background: rgba(255, 159, 67, 0.15);
    color: var(--warning-color);
    border: 1px solid rgba(255, 159, 67, 0.3);
  }
  
  .badge.info {
    background: rgba(0, 207, 232, 0.15);
    color: var(--info-color);
    border: 1px solid rgba(0, 207, 232, 0.3);
  }
  
  .badge.default {
    background: rgba(179, 185, 209, 0.15);
    color: var(--text-secondary);
    border: 1px solid rgba(179, 185, 209, 0.3);
  }
  
  /* Action Buttons */
  .actions {
    display: flex;
    gap: 0.5rem;
  }
  
  .action-btn {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
    font-size: 0.9rem;
  }
  
  .action-btn.delete {
    background: rgba(234, 84, 85, 0.15);
    color: var(--danger-color);
  }
  
  .action-btn.delete:hover {
    background: rgba(234, 84, 85, 0.3);
  }
  
  .action-btn.copy {
    background: rgba(0, 207, 232, 0.15);
    color: var(--info-color);
  }
  
  .action-btn.copy:hover {
    background: rgba(0, 207, 232, 0.3);
  }
  
  /* Info Alert */
  .info-alert {
    display: flex;
    align-items: center;
    background: rgba(0, 207, 232, 0.1);
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    border: 1px solid rgba(0, 207, 232, 0.3);
  }
  
  .alert-icon {
    font-size: 1.5rem;
    color: var(--info-color);
    margin-right: 1rem;
  }
  
  .alert-content {
    color: var(--text-secondary);
    font-size: 0.95rem;
  }
  
  /* Table Footer */
  .table-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.5rem;
    padding-top: 1rem;
    border-top: 1px solid rgba(156, 77, 255, 0.1);
  }
  
  .table-info {
    color: var(--text-secondary);
  }
  
  /* Empty State */
  .empty-state {
    padding: 3rem 1rem;
    text-align: center;
    color: var(--text-secondary);
  }
  
  .empty-icon {
    font-size: 3.5rem;
    color: rgba(156, 77, 255, 0.2);
    margin-bottom: 1rem;
  }
  
  .empty-state h3 {
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  /* Toast Notifications */
  .toast-container {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 9999;
  }
  
  .toast {
    background: var(--card-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 8px;
    overflow: hidden;
    margin-top: 1rem;
    width: 300px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(156, 77, 255, 0.2);
    animation: slideIn 0.3s ease forwards;
  }
  
  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .toast-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.8rem 1rem;
    background: rgba(42, 45, 62, 0.9);
    border-bottom: 1px solid rgba(156, 77, 255, 0.2);
  }
  
  .toast-body {
    padding: 1rem;
  }
  
  /* Responsive Adjustments */
  @media (max-width: 1200px) {
    .content-grid {
      grid-template-columns: 1fr;
    }
    
    .sidebar {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1.5rem;
    }
    
    .glass-card {
      margin-bottom: 0;
    }
  }
  
  @media (max-width: 768px) {
    .sidebar {
      grid-template-columns: 1fr;
    }
    
    .header-content {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }
    
    .header-title {
      margin-bottom: 1.5rem;
    }
    
    .header-title h1 {
      justify-content: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Copy User ID functionality
    document.querySelectorAll('.copy-id').forEach(button => {
      button.addEventListener('click', function() {
        const userId = this.getAttribute('data-id');
        navigator.clipboard.writeText(userId).then(() => {
          showToast('User ID Copied', 'ID has been copied to your clipboard');
        });
      });
    });
    
    // Filter functionality
    const searchInput = document.getElementById('search');
    const filterType = document.getElementById('filterType');
    const clearFilterBtn = document.getElementById('clearFilter');
    const table = document.getElementById('blacklistTable');
    const tableRows = table.querySelectorAll('tbody tr.data-row');
    
    function applyFilter() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedType = filterType.value;
      let visibleCount = 0;
      
      tableRows.forEach(row => {
        const userId = row.querySelector('.user-id')?.textContent.toLowerCase() || '';
        const reason = row.querySelector('.reason')?.textContent.toLowerCase() || '';
        const type = row.getAttribute('data-type') || '';
        
        const matchesSearch = userId.includes(searchTerm) || reason.includes(searchTerm);
        const matchesType = selectedType === 'all' || type === selectedType;
        
        if (matchesSearch && matchesType) {
          row.style.display = '';
          visibleCount++;
        } else {
          row.style.display = 'none';
        }
      });
      
      // Show empty state if no results
      const emptyRow = table.querySelector('.empty-row');
      if (visibleCount === 0 && tableRows.length > 0) {
        if (!emptyRow) {
          const tbody = table.querySelector('tbody');
          const tr = document.createElement('tr');
          tr.className = 'empty-row';
          tr.innerHTML = `
            <td colspan="5">
              <div class="empty-state">
                <div class="empty-icon">
                  <i class="fas fa-search"></i>
                </div>
                <h3>No Results Found</h3>
                <p>Try adjusting your search or filters</p>
              </div>
            </td>
          `;
          tbody.appendChild(tr);
        } else {
          emptyRow.style.display = '';
        }
      } else if (emptyRow) {
        emptyRow.style.display = 'none';
      }
    }
    
    if (searchInput && filterType && clearFilterBtn) {
      searchInput.addEventListener('input', applyFilter);
      filterType.addEventListener('change', applyFilter);
      
      clearFilterBtn.addEventListener('click', function() {
        searchInput.value = '';
        filterType.value = 'all';
        applyFilter();
      });
    }
    
    // Toast notification system
    window.showToast = function(title, message) {
      const toastContainer = document.getElementById('toastContainer');
      
      const toast = document.createElement('div');
      toast.className = 'toast';
      
      toast.innerHTML = `
        <div class="toast-header">
          <strong>${title}</strong>
          <button type="button" class="close-btn">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <div class="toast-body">
          ${message}
        </div>
      `;
      
      toastContainer.appendChild(toast);
      
      const closeButton = toast.querySelector('.close-btn');
      closeButton.addEventListener('click', function() {
        removeToast(toast);
      });
      
      // Auto remove after 5 seconds
      setTimeout(() => {
        removeToast(toast);
      }, 5000);
    }
    
    function removeToast(toast) {
      toast.style.opacity = '0';
      toast.style.transform = 'translateX(100%)';
      toast.style.transition = 'all 0.3s ease-out';
      
      setTimeout(() => {
        toast.remove();
      }, 300);
    }
  });
</script>

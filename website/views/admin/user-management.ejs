<%- include('../partials/admin-header-fixed') %>

<div class="admin-page-header">
  <div class="header-content">
    <h1><i class="fas fa-user-shield"></i> Admin User Management</h1>
    <p>Manage admin users who have access to the dashboard</p>
  </div>
</div>

<div class="dashboard-stats-row">
  <div class="dashboard-stat-card">
    <div class="stat-icon discord">
      <i class="fab fa-discord"></i>
    </div>
    <div class="stat-info">
      <h3>Discord Admins</h3>
      <p class="stat-number"><%= adminUsers.length || 0 %></p>
    </div>
  </div>
  
  <div class="dashboard-stat-card">
    <div class="stat-icon local">
      <i class="fas fa-user-lock"></i>
    </div>
    <div class="stat-info">
      <h3>Local Admins</h3>
      <p class="stat-number"><%= (typeof localAdminUsers !== 'undefined' ? localAdminUsers.length : 0) %></p>
    </div>
  </div>
</div>

<% if (success) { %>
  <div class="alert alert-success">
    <i class="fas fa-check-circle"></i> <%= success %>
    <button class="alert-close"><i class="fas fa-times"></i></button>
  </div>
<% } %>

<% if (error) { %>
  <div class="alert alert-danger">
    <i class="fas fa-exclamation-triangle"></i> <%= error %>
    <button class="alert-close"><i class="fas fa-times"></i></button>
  </div>
<% } %>

<div class="admin-tabs">
  <button class="tab-btn active" data-tab="discord-admins">
    <i class="fab fa-discord"></i> Discord Admins
  </button>
  <button class="tab-btn" data-tab="local-admins">
    <i class="fas fa-user-lock"></i> Local Admins
  </button>
  <button class="tab-btn" data-tab="add-discord">
    <i class="fas fa-plus-circle"></i> Add Discord Admin
  </button>
  <button class="tab-btn" data-tab="add-local">
    <i class="fas fa-plus-circle"></i> Add Local Admin
  </button>
</div>

<div class="tab-content">
  <!-- Discord Admin Users Tab -->
  <div class="tab-pane active" id="discord-admins">
    <div class="card modern-card">
      <div class="card-header">
        <h2><i class="fab fa-discord"></i> Discord Admin Users</h2>
        <p>These Discord users have access to the admin panel via Discord OAuth</p>
      </div>
      <div class="card-body">
        <% if (adminUsers && adminUsers.length > 0) { %>
          <div class="table-responsive">
            <table class="modern-table">
              <thead>
                <tr>
                  <th>User ID</th>
                  <th>User Information</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% adminUsers.forEach(user => { %>
                  <tr>
                    <td><code><%= user.id %></code></td>
                    <td>
                      <div class="user-info">
                        <% if (user.avatarUrl) { %>
                          <img src="<%= user.avatarUrl %>" alt="Discord avatar" class="user-avatar">
                        <% } else { %>
                          <div class="user-avatar user-avatar-placeholder">
                            <i class="fab fa-discord"></i>
                          </div>
                        <% } %>
                        <div class="user-details">
                          <% if (user.username) { %>
                            <span class="username"><%= user.displayName %></span>
                            <span class="user-tag">@<%= user.username %></span>
                          <% } else { %>
                            <span class="username"><%= user.comment %></span>
                          <% } %>
                        </div>
                      </div>
                    </td>
                    <td>
                      <form action="/admin/users/remove" method="POST" class="inline-form">
                        <input type="hidden" name="userId" value="<%= user.id %>">
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to remove this admin user?')">
                          <i class="fas fa-trash"></i> Remove
                        </button>
                      </form>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        <% } else { %>
          <div class="empty-state">
            <i class="fas fa-users-slash"></i>
            <p>No Discord admin users found</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Local Admin Users Tab -->
  <div class="tab-pane" id="local-admins">
    <div class="card modern-card">
      <div class="card-header">
        <h2><i class="fas fa-user-lock"></i> Local Admin Users</h2>
        <p>These users can access the admin panel with username and password login</p>
      </div>
      <div class="card-body">
        <% if (typeof localAdminUsers !== 'undefined' && localAdminUsers.length > 0) { %>
          <div class="table-responsive">
            <table class="modern-table">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Username</th>
                  <th>Display Name</th>
                  <th>Email</th>
                  <th>Super Admin</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% localAdminUsers.forEach(user => { %>
                  <tr>
                    <td><code><%= user.id %></code></td>
                    <td>
                      <div class="user-info">
                        <% if (user.avatar) { %>
                          <img src="<%= user.avatar %>" alt="User avatar" class="user-avatar">
                        <% } else { %>
                          <div class="user-avatar user-avatar-placeholder">
                            <i class="fas fa-user"></i>
                          </div>
                        <% } %>
                        <span class="username"><%= user.username %></span>
                      </div>
                    </td>
                    <td><%= user.display_name || user.username %></td>
                    <td><%= user.email || 'Not set' %></td>
                    <td>
                      <% if (user.is_super_admin) { %>
                        <span class="badge badge-super-admin">Super Admin</span>
                      <% } else { %>
                        <span class="badge badge-admin">Admin</span>
                      <% } %>
                    </td>
                    <td>
                      <form action="/admin/localusers/remove" method="POST" class="inline-form">
                        <input type="hidden" name="userId" value="<%= user.id %>">
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to remove this local admin user?')">
                          <i class="fas fa-trash"></i> Remove
                        </button>
                      </form>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        <% } else { %>
          <div class="empty-state">
            <i class="fas fa-users-slash"></i>
            <p>No local admin users found</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Add Discord Admin Tab -->
  <div class="tab-pane" id="add-discord">
    <div class="card modern-card">
      <div class="card-header">
        <h2><i class="fas fa-plus-circle"></i> Add New Discord Admin</h2>
        <p>Add a new Discord user who can access the admin panel via Discord OAuth</p>
      </div>
      <div class="card-body">
        <form action="/admin/users/add" method="POST" class="modern-form">
          <div class="form-group">
            <label for="userId"><i class="fas fa-id-card"></i> Discord User ID</label>
            <input type="text" id="userId" name="userId" class="form-control" placeholder="Enter Discord user ID" pattern="^\d{17,19}$" required>
            <small class="form-text">Enter the Discord User ID (17-19 digit number). Enable Developer Mode in Discord settings, then right-click on a user and select "Copy ID".</small>
          </div>
          
          <div class="form-group">
            <label for="comment"><i class="fas fa-comment"></i> Username or Comment</label>
            <input type="text" id="comment" name="comment" class="form-control" placeholder="John Doe (Community Manager)" required>
            <small class="form-text">Add a username or note to identify this user (e.g., "john_doe" or "Community Manager").</small>
          </div>
          
          <button type="submit" class="btn btn-primary btn-lg">
            <i class="fas fa-plus-circle"></i> Add Discord Admin
          </button>
        </form>
      </div>
    </div>
  </div>

  <!-- Add Local Admin Tab -->
  <div class="tab-pane" id="add-local">
    <div class="card modern-card">
      <div class="card-header">
        <h2><i class="fas fa-plus-circle"></i> Add New Local Admin</h2>
        <p>Create a new admin user who can log in directly with username and password</p>
      </div>
      <div class="card-body">
        <form action="/admin/localusers/add" method="POST" class="modern-form">
          <div class="form-row">
            <div class="form-group form-group-half">
              <label for="username"><i class="fas fa-user"></i> Username</label>
              <input type="text" id="username" name="username" class="form-control" placeholder="admin1" required>
              <small class="form-text">Enter a username for login (e.g., "admin1", "moderator", etc.).</small>
            </div>
            
            <div class="form-group form-group-half">
              <label for="password"><i class="fas fa-lock"></i> Password</label>
              <div class="password-input-group">
                <input type="password" id="password" name="password" class="form-control" placeholder="••••••••" minlength="8" required>
                <button type="button" class="password-toggle"><i class="fas fa-eye"></i></button>
              </div>
              <small class="form-text">Create a strong password (minimum 8 characters).</small>
            </div>
          </div>
          
          <div class="form-row">
            <div class="form-group form-group-half">
              <label for="display_name"><i class="fas fa-id-badge"></i> Display Name (Optional)</label>
              <input type="text" id="display_name" name="display_name" class="form-control" placeholder="John Doe">
              <small class="form-text">The name that will be displayed in the admin panel.</small>
            </div>
            
            <div class="form-group form-group-half">
              <label for="email"><i class="fas fa-envelope"></i> Email (Optional)</label>
              <input type="email" id="email" name="email" class="form-control" placeholder="admin@example.com">
              <small class="form-text">Email address for account recovery.</small>
            </div>
          </div>
          
          <button type="submit" class="btn btn-primary btn-lg">
            <i class="fas fa-plus-circle"></i> Create Local Admin
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<div class="card modern-card mt-4">
  <div class="card-header">
    <h2><i class="fas fa-info-circle"></i> How to Get User IDs</h2>
    <p>Follow these steps to get a Discord User ID</p>
  </div>
  <div class="card-body">
    <div class="steps-container">
      <div class="step">
        <div class="step-number">1</div>
        <div class="step-content">
          <h4>Open Discord Settings</h4>
          <p>Click on the gear icon in the bottom-left corner of Discord</p>
        </div>
      </div>
      <div class="step">
        <div class="step-number">2</div>
        <div class="step-content">
          <h4>Enable Developer Mode</h4>
          <p>Go to <strong>Advanced</strong> settings and toggle on <strong>Developer Mode</strong></p>
        </div>
      </div>
      <div class="step">
        <div class="step-number">3</div>
        <div class="step-content">
          <h4>Copy User ID</h4>
          <p>Right-click on a user's name in a server or DM and select <strong>Copy ID</strong></p>
        </div>
      </div>
      <div class="step">
        <div class="step-number">4</div>
        <div class="step-content">
          <h4>Paste in Form</h4>
          <p>Paste the copied ID in the Discord User ID field above</p>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* General Layout */
  .tab-content {
    margin-top: 20px;
  }
  
  .tab-pane {
    display: none;
  }
  
  .tab-pane.active {
    display: block;
    animation: fadeIn 0.3s;
  }
  
  .admin-tabs {
    display: flex;
    overflow-x: auto;
    background: var(--card-bg);
    border-radius: 10px;
    padding: 10px;
    margin-bottom: 20px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }
  
  .tab-btn {
    background: transparent;
    border: none;
    padding: 10px 15px;
    margin-right: 5px;
    cursor: pointer;
    border-radius: 8px;
    color: var(--text-muted);
    font-weight: 500;
    transition: all 0.2s ease;
    white-space: nowrap;
  }
  
  .tab-btn:hover {
    background: rgba(156, 77, 255, 0.1);
    color: var(--text-primary);
  }
  
  .tab-btn.active {
    background: rgba(156, 77, 255, 0.2);
    color: #9c4dff;
  }
  
  .tab-btn i {
    margin-right: 6px;
  }
  
  /* Modern Cards */
  .modern-card {
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
    margin-bottom: 25px;
  }
  
  .modern-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  
  .modern-card .card-header {
    background: var(--card-header-bg);
    padding: 20px 25px;
    border-bottom: 1px solid var(--border-color);
  }
  
  .modern-card .card-header h2 {
    margin: 0 0 5px 0;
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  .modern-card .card-header p {
    margin: 0;
    color: var(--text-muted);
    font-size: 0.95rem;
  }
  
  .modern-card .card-header h2 i {
    margin-right: 8px;
    color: #9c4dff;
  }
  
  .modern-card .card-body {
    padding: 25px;
  }
  
  /* Modern Table */
  .modern-table {
    width: 100%;
    border-collapse: collapse;
  }
  
  .modern-table thead th {
    background: rgba(156, 77, 255, 0.08);
    padding: 12px 15px;
    text-align: left;
    font-weight: 600;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-color);
  }
  
  .modern-table tbody tr {
    border-bottom: 1px solid var(--border-color);
    transition: background 0.2s;
  }
  
  .modern-table tbody tr:hover {
    background: rgba(156, 77, 255, 0.05);
  }
  
  .modern-table tbody td {
    padding: 12px 15px;
    color: var(--text-secondary);
  }
  
  /* User Info in Tables */
  .user-info {
    display: flex;
    align-items: center;
  }
  
  .user-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 12px;
    object-fit: cover;
    border: 2px solid #9c4dff;
  }
  
  .user-avatar-placeholder {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 12px;
    background: rgba(156, 77, 255, 0.1);
    color: #9c4dff;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    border: 2px solid rgba(156, 77, 255, 0.2);
  }
  
  .user-details {
    display: flex;
    flex-direction: column;
  }
  
  .username {
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 2px;
  }
  
  .user-tag {
    font-size: 0.8rem;
    color: var(--text-muted);
    font-weight: 400;
  }
  
  /* Badges */
  .badge {
    padding: 5px 8px;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
  }
  
  .badge-super-admin {
    background: rgba(156, 77, 255, 0.2);
    color: #9c4dff;
  }
  
  .badge-admin {
    background: rgba(79, 149, 255, 0.2);
    color: #4f95ff;
  }
  
  /* Modern Form */
  .modern-form .form-group {
    margin-bottom: 20px;
  }
  
  .modern-form .form-row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -10px 20px;
  }
  
  .modern-form .form-group-half {
    flex: 1 0 calc(50% - 20px);
    margin: 0 10px;
  }
  
  .modern-form label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  .modern-form label i {
    margin-right: 6px;
    color: #9c4dff;
  }
  
  .modern-form .form-control {
    display: block;
    width: 100%;
    padding: 12px 15px;
    font-size: 1rem;
    line-height: 1.5;
    color: var(--text-primary);
    background-color: var(--input-bg);
    background-clip: padding-box;
    border: 1px solid var(--input-border);
    border-radius: 8px;
    transition: all 0.15s ease-in-out;
  }
  
  .modern-form .form-control:focus {
    border-color: #9c4dff;
    outline: 0;
    box-shadow: 0 0 0 3px rgba(156, 77, 255, 0.25);
  }
  
  .modern-form .form-text {
    margin-top: 6px;
    font-size: 0.825rem;
    color: var(--text-muted);
  }
  
  /* Password Toggle */
  .password-input-group {
    position: relative;
  }
  
  .password-toggle {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    background: transparent;
    border: none;
    cursor: pointer;
    color: var(--text-muted);
  }
  
  .password-toggle:hover {
    color: var(--text-primary);
  }
  
  /* Buttons */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    padding: 8px 16px;
    border-radius: 8px;
    transition: all 0.2s ease-in-out;
    border: none;
  }
  
  .btn i {
    margin-right: 6px;
  }
  
  .btn-primary {
    background-color: #9c4dff;
    color: white;
  }
  
  .btn-primary:hover {
    background-color: #8a2be2;
  }
  
  .btn-danger {
    background-color: #ED4245;
    color: white;
  }
  
  .btn-danger:hover {
    background-color: #c03537;
  }
  
  .btn-sm {
    padding: 5px 10px;
    font-size: 0.875rem;
    border-radius: 6px;
  }
  
  .btn-lg {
    padding: 12px 20px;
    font-size: 1rem;
  }
  
  /* Dashboard Stats */
  .dashboard-stats-row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 25px;
  }
  
  .dashboard-stat-card {
    flex: 1;
    min-width: 200px;
    background: var(--card-bg);
    border-radius: 12px;
    padding: 20px;
    display: flex;
    align-items: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
  }
  
  .dashboard-stat-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  
  .stat-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
    border-radius: 12px;
    margin-right: 15px;
    font-size: 1.5rem;
  }
  
  .stat-icon.discord {
    background: rgba(88, 101, 242, 0.2);
    color: #5865f2;
  }
  
  .stat-icon.local {
    background: rgba(156, 77, 255, 0.2);
    color: #9c4dff;
  }
  
  .stat-info h3 {
    margin: 0 0 5px 0;
    font-size: 0.95rem;
    color: var(--text-muted);
    font-weight: 500;
  }
  
  .stat-number {
    font-size: 1.8rem;
    font-weight: 700;
    color: var(--text-primary);
    margin: 0;
  }
  
  /* Empty State */
  .empty-state {
    padding: 40px 20px;
    text-align: center;
    color: var(--text-muted);
  }
  
  .empty-state i {
    font-size: 4rem;
    margin-bottom: 15px;
    opacity: 0.5;
  }
  
  .empty-state p {
    font-size: 1.1rem;
    margin: 0;
  }
  
  /* Alert */
  .alert {
    padding: 15px 20px;
    border-radius: 8px;
    margin-bottom: 20px;
    position: relative;
    animation: slideDown 0.3s ease;
  }
  
  .alert-success {
    background-color: rgba(87, 242, 135, 0.2);
    border: 1px solid rgba(87, 242, 135, 0.5);
    color: #2caa58;
  }
  
  .alert-danger {
    background: rgba(237, 66, 69, 0.2);
    border: 1px solid rgba(237, 66, 69, 0.5);
    color: #c03537;
  }
  
  .alert-close {
    position: absolute;
    right: 15px;
    top: 15px;
    background: transparent;
    border: none;
    color: inherit;
    opacity: 0.7;
    cursor: pointer;
  }
  
  .alert-close:hover {
    opacity: 1;
  }
  
  /* Steps Container */
  .steps-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  
  .step {
    display: flex;
    align-items: flex-start;
    padding: 5px 0;
  }
  
  .step-number {
    flex: 0 0 35px;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    background: rgba(156, 77, 255, 0.2);
    color: #9c4dff;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    margin-right: 15px;
  }
  
  .step-content {
    flex: 1;
  }
  
  .step-content h4 {
    margin: 0 0 5px 0;
    color: var(--text-primary);
  }
  
  .step-content p {
    margin: 0;
    color: var(--text-secondary);
  }
  
  /* Helper Classes */
  .mt-4 {
    margin-top: 25px;
  }
  
  .inline-form {
    display: inline-block;
  }
  
  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideDown {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .modern-form .form-row {
      flex-direction: column;
    }
    
    .modern-form .form-group-half {
      flex: 1 0 100%;
      margin: 0 0 20px 0;
    }
    
    .admin-tabs {
      flex-wrap: wrap;
    }
    
    .tab-btn {
      margin-bottom: 5px;
    }
    
    .dashboard-stat-card {
      min-width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Tab functionality
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabPanes = document.querySelectorAll('.tab-pane');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Remove active class from all buttons and panes
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabPanes.forEach(pane => pane.classList.remove('active'));
        
        // Add active class to clicked button and corresponding pane
        this.classList.add('active');
        const tabId = this.getAttribute('data-tab');
        document.getElementById(tabId).classList.add('active');
      });
    });
    
    // Password toggle functionality
    const passwordToggles = document.querySelectorAll('.password-toggle');
    
    passwordToggles.forEach(toggle => {
      toggle.addEventListener('click', function() {
        const passwordInput = this.previousElementSibling;
        const icon = this.querySelector('i');
        
        if (passwordInput.type === 'password') {
          passwordInput.type = 'text';
          icon.classList.remove('fa-eye');
          icon.classList.add('fa-eye-slash');
        } else {
          passwordInput.type = 'password';
          icon.classList.remove('fa-eye-slash');
          icon.classList.add('fa-eye');
        }
      });
    });
    
    // Alert close functionality
    const alertCloseButtons = document.querySelectorAll('.alert-close');
    
    alertCloseButtons.forEach(button => {
      button.addEventListener('click', function() {
        const alert = this.closest('.alert');
        alert.style.opacity = '0';
        setTimeout(() => {
          alert.style.display = 'none';
        }, 300);
      });
    });
  });
</script>

<%- include('../partials/admin-footer') %>

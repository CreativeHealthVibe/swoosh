<%- include('../partials/header') %>

<div class="container-fluid admin-dashboard">
  <div class="row">
    <!-- Sidebar -->
    <%- include('./partials/sidebar', { activeNav: 'admin-logs' }) %>

    <!-- Main Content -->
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2"><i class="fas fa-file-alt"></i> Log: <%= filename %></h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <div class="btn-group me-2">
            <a href="/admin/logs" class="btn btn-sm btn-outline-secondary">
              <i class="fas fa-arrow-left"></i> Back to Logs
            </a>
            <a href="/api/logs/download/<%= filename %>" class="btn btn-sm btn-outline-secondary">
              <i class="fas fa-download"></i> Download
            </a>
            <button type="button" class="btn btn-sm btn-outline-secondary" id="refreshLog">
              <i class="fas fa-sync-alt"></i> Refresh
            </button>
          </div>
        </div>
      </div>

      <!-- Log Content -->
      <div class="card">
        <div class="card-header">
          <div class="row align-items-center">
            <div class="col">
              <h5 class="mb-0">Log Content</h5>
            </div>
            <div class="col-auto">
              <div class="input-group input-group-sm">
                <input type="text" id="searchLog" class="form-control" placeholder="Search in log...">
                <span class="input-group-text" id="searchCount">0 results</span>
              </div>
            </div>
          </div>
        </div>
        <div class="card-body p-0">
          <div class="log-container bg-dark text-light p-3" id="logContent" style="height: 600px; overflow-y: auto; font-family: monospace; white-space: pre-wrap;">
            <% if (logLines && logLines.length > 0) { %>
              <% logLines.forEach(line => { %>
                <div class="log-line <%= line.includes('ERROR') ? 'text-danger' : (line.includes('WARN') ? 'text-warning' : '') %>"><%= line %></div>
              <% }); %>
            <% } else { %>
              <div class="log-empty">Log file is empty or could not be read.</div>
            <% } %>
          </div>
        </div>
        <div class="card-footer">
          <div class="row align-items-center">
            <div class="col">
              <small class="text-muted">Total lines: <%= logLines ? logLines.length : 0 %></small>
            </div>
            <div class="col-auto">
              <div class="btn-group btn-group-sm">
                <button type="button" class="btn btn-outline-secondary" id="scrollToTop">
                  <i class="fas fa-arrow-up"></i> Top
                </button>
                <button type="button" class="btn btn-outline-secondary" id="scrollToBottom">
                  <i class="fas fa-arrow-down"></i> Bottom
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Filter Panel -->
      <div class="card mt-4">
        <div class="card-header">
          <h5 class="mb-0"><i class="fas fa-filter"></i> Filter Log</h5>
        </div>
        <div class="card-body">
          <div class="row g-3">
            <div class="col-md-6">
              <div class="form-check form-switch">
                <input class="form-check-input filter-toggle" type="checkbox" id="showErrors" checked>
                <label class="form-check-label" for="showErrors">Show Errors</label>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-check form-switch">
                <input class="form-check-input filter-toggle" type="checkbox" id="showWarnings" checked>
                <label class="form-check-label" for="showWarnings">Show Warnings</label>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-check form-switch">
                <input class="form-check-input filter-toggle" type="checkbox" id="showInfo" checked>
                <label class="form-check-label" for="showInfo">Show Info</label>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-check form-switch">
                <input class="form-check-input filter-toggle" type="checkbox" id="showDebug" checked>
                <label class="form-check-label" for="showDebug">Show Debug</label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const logContent = document.getElementById('logContent');
    const searchLog = document.getElementById('searchLog');
    const searchCount = document.getElementById('searchCount');
    
    // Refresh log content
    document.getElementById('refreshLog').addEventListener('click', function() {
      location.reload();
    });
    
    // Scroll controls
    document.getElementById('scrollToTop').addEventListener('click', function() {
      logContent.scrollTop = 0;
    });
    
    document.getElementById('scrollToBottom').addEventListener('click', function() {
      logContent.scrollTop = logContent.scrollHeight;
    });
    
    // Initially scroll to bottom (most recent logs)
    logContent.scrollTop = logContent.scrollHeight;
    
    // Search functionality
    let searchMatches = [];
    let currentMatch = -1;
    
    searchLog.addEventListener('input', function() {
      const searchValue = this.value.toLowerCase();
      searchMatches = [];
      currentMatch = -1;
      
      if (searchValue.length < 2) {
        // Clear highlights
        document.querySelectorAll('.log-line').forEach(line => {
          line.innerHTML = line.textContent;
        });
        searchCount.textContent = '0 results';
        return;
      }
      
      // Find matching lines
      document.querySelectorAll('.log-line').forEach((line, index) => {
        const content = line.textContent.toLowerCase();
        if (content.includes(searchValue)) {
          searchMatches.push(index);
          
          // Highlight the matching text
          const regex = new RegExp(searchValue, 'gi');
          line.innerHTML = line.textContent.replace(regex, match => `<span class="bg-warning text-dark">${match}</span>`);
        } else {
          line.innerHTML = line.textContent;
        }
      });
      
      searchCount.textContent = `${searchMatches.length} results`;
      
      // Scroll to first match if any
      if (searchMatches.length > 0) {
        highlightNextMatch();
      }
    });
    
    // Navigate between matches with enter key
    searchLog.addEventListener('keydown', function(event) {
      if (event.key === 'Enter' && searchMatches.length > 0) {
        event.preventDefault();
        highlightNextMatch();
      }
    });
    
    function highlightNextMatch() {
      currentMatch = (currentMatch + 1) % searchMatches.length;
      const matchIndex = searchMatches[currentMatch];
      const matchElement = document.querySelectorAll('.log-line')[matchIndex];
      
      // Scroll to the element
      matchElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
      
      // Update count display
      searchCount.textContent = `${currentMatch + 1}/${searchMatches.length} results`;
    }
    
    // Filtering functionality
    document.querySelectorAll('.filter-toggle').forEach(toggle => {
      toggle.addEventListener('change', applyFilters);
    });
    
    function applyFilters() {
      const showErrors = document.getElementById('showErrors').checked;
      const showWarnings = document.getElementById('showWarnings').checked;
      const showInfo = document.getElementById('showInfo').checked;
      const showDebug = document.getElementById('showDebug').checked;
      
      document.querySelectorAll('.log-line').forEach(line => {
        const content = line.textContent;
        
        if (content.includes('ERROR') && !showErrors) {
          line.style.display = 'none';
        } else if (content.includes('WARN') && !showWarnings) {
          line.style.display = 'none';
        } else if (content.includes('INFO') && !showInfo) {
          line.style.display = 'none';
        } else if (content.includes('DEBUG') && !showDebug) {
          line.style.display = 'none';
        } else {
          line.style.display = '';
        }
      });
    }
  });
</script>

<%- include('../partials/footer') %>

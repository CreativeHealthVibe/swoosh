<%- include('../partials/admin-header-fixed') %>

<div class="admin-welcome-container">
  <div class="welcome-header">
    <img src="/images/swoosh-logo.png" alt="SWOOSH Bot" class="welcome-logo">
    <h1>Welcome to SWOOSH Bot Admin</h1>
    <p>Manage your bot settings, view logs, and more from this centralized admin panel.</p>
  </div>

  <div class="welcome-stats">
    <div class="stat-card">
      <i class="fas fa-server"></i>
      <div class="stat-content">
        <h3>Server Count</h3>
        <p class="stat-value" id="server-count">--</p>
      </div>
    </div>
    <div class="stat-card">
      <i class="fas fa-users"></i>
      <div class="stat-content">
        <h3>User Count</h3>
        <p class="stat-value" id="user-count">--</p>
      </div>
    </div>
    <div class="stat-card">
      <i class="fas fa-ticket-alt"></i>
      <div class="stat-content">
        <h3>Tickets</h3>
        <p class="stat-value" id="ticket-count">--</p>
      </div>
    </div>
    <div class="stat-card">
      <i class="fas fa-clock"></i>
      <div class="stat-content">
        <h3>Uptime</h3>
        <p class="stat-value" id="uptime">--</p>
      </div>
    </div>
  </div>

  <div class="welcome-panels">
    <div class="activity-log-panel">
      <h2><i class="fas fa-history"></i> Recent Activity</h2>
      <div class="activity-log" id="activity-log">
        <div class="loading-placeholder">
          <div class="spinner"></div>
          <p>Loading activity logs...</p>
        </div>
      </div>
    </div>
    
    <div class="command-usage-panel">
      <h2><i class="fas fa-terminal"></i> Command Usage</h2>
      <div class="command-usage" id="command-usage">
        <div class="loading-placeholder">
          <div class="spinner"></div>
          <p>Loading command statistics...</p>
        </div>
      </div>
    </div>
  </div>

  <div class="welcome-section">
    <h2>Quick Actions</h2>
    <div class="welcome-actions">
      <a href="/admin/blacklist" class="gradient-button">
        <i class="fas fa-ban"></i> Manage Blacklist
      </a>
      <a href="/admin/settings" class="btn btn-secondary">
        <i class="fas fa-cog"></i> Bot Settings
      </a>
      <a href="/admin/logs" class="btn btn-secondary">
        <i class="fas fa-list"></i> View Logs
      </a>
      <a href="/admin/members" class="btn btn-secondary">
        <i class="fas fa-users"></i> Manage Members
      </a>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Connect to WebSocket
    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
    const wsUrl = `${protocol}//${window.location.host}/admin-stats`;
    const socket = new WebSocket(wsUrl);

    socket.onopen = function() {
      console.log('Connected to admin stats WebSocket');
    };

    socket.onmessage = function(event) {
      const data = JSON.parse(event.data);
      
      // Update stats
      if (data.serverCount) document.getElementById('server-count').textContent = data.serverCount.toLocaleString();
      if (data.userCount) document.getElementById('user-count').textContent = data.userCount.toLocaleString();
      if (data.ticketCount !== undefined) document.getElementById('ticket-count').textContent = data.ticketCount.toLocaleString();
      if (data.uptime) document.getElementById('uptime').textContent = data.uptime;
      
      // Update activity log
      if (data.activityLog && data.activityLog.length > 0) {
        const activityLogContainer = document.getElementById('activity-log');
        activityLogContainer.innerHTML = '';
        
        data.activityLog.forEach(entry => {
          const activityItem = document.createElement('div');
          activityItem.className = 'activity-item';
          
          let iconClass = 'fas fa-info-circle';
          let iconColor = '#4a90e2';
          
          // Determine icon and color based on activity type
          switch (entry.type) {
            case 'ban':
              iconClass = 'fas fa-gavel';
              iconColor = '#e74c3c';
              break;
            case 'kick':
              iconClass = 'fas fa-boot';
              iconColor = '#e67e22';
              break;
            case 'warn':
              iconClass = 'fas fa-exclamation-triangle';
              iconColor = '#f39c12';
              break;
            case 'ticket':
              iconClass = 'fas fa-ticket-alt';
              iconColor = '#2ecc71';
              break;
            case 'mute':
              iconClass = 'fas fa-microphone-slash';
              iconColor = '#9b59b6';
              break;
            case 'command':
              iconClass = 'fas fa-terminal';
              iconColor = '#3498db';
              break;
          }
          
          activityItem.innerHTML = `
            <div class="activity-icon" style="background-color: ${iconColor}">
              <i class="${iconClass}"></i>
            </div>
            <div class="activity-content">
              <p>${entry.message}</p>
              <span class="activity-time">${entry.time}</span>
            </div>
          `;
          
          activityLogContainer.appendChild(activityItem);
        });
      }
      
      // Update command usage
      if (data.commandUsage && Object.keys(data.commandUsage).length > 0) {
        const commandUsageContainer = document.getElementById('command-usage');
        commandUsageContainer.innerHTML = '';
        
        // Sort commands by usage count (descending)
        const sortedCommands = Object.entries(data.commandUsage)
          .sort((a, b) => b[1] - a[1])
          .slice(0, 8); // Show top 8 commands
        
        sortedCommands.forEach(([command, count]) => {
          const commandItem = document.createElement('div');
          commandItem.className = 'command-item';
          
          // Calculate percentage for the bar width
          const maxCount = sortedCommands[0][1];
          const percentage = (count / maxCount) * 100;
          
          commandItem.innerHTML = `
            <div class="command-name">${command}</div>
            <div class="command-bar-container">
              <div class="command-bar" style="width: ${percentage}%"></div>
            </div>
            <div class="command-count">${count}</div>
          `;
          
          commandUsageContainer.appendChild(commandItem);
        });
      }
    };

    socket.onerror = function(error) {
      console.error('WebSocket error:', error);
    };

    socket.onclose = function() {
      console.log('WebSocket connection closed');
    };
  });
</script>

<%- include('../partials/admin-footer') %>

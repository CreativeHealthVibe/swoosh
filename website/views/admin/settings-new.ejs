<%- include('../partials/admin-header-fixed') %>

<div class="settings-container">
  <div class="admin-page-header">
    <div class="header-content">
      <h1><i class="fas fa-cog"></i> Bot Settings</h1>
      <p>Configure the behavior and appearance of your Discord bot</p>
    </div>
  </div>
  
  <% if (messages && messages.success) { %>
  <div class="alert-toast success">
    <div class="alert-icon"><i class="fas fa-check-circle"></i></div>
    <div class="alert-content">
      <p><%= messages.success %></p>
    </div>
    <button class="alert-close" onclick="this.parentElement.remove()"><i class="fas fa-times"></i></button>
  </div>
  <% } %>
  
  <% if (messages && messages.error) { %>
  <div class="alert-toast error">
    <div class="alert-icon"><i class="fas fa-exclamation-circle"></i></div>
    <div class="alert-content">
      <p><%= messages.error %></p>
    </div>
    <button class="alert-close" onclick="this.parentElement.remove()"><i class="fas fa-times"></i></button>
  </div>
  <% } %>

  <div class="settings-content">
    <div class="settings-sidebar">
      <div class="sidebar-header">
        <h3>Settings</h3>
      </div>
      <ul class="sidebar-nav">
        <li class="active"><a href="#general" data-bs-toggle="tab"><i class="fas fa-sliders-h"></i> General</a></li>
        <li><a href="#logging" data-bs-toggle="tab"><i class="fas fa-file-alt"></i> Logging</a></li>
        <li><a href="#tickets" data-bs-toggle="tab"><i class="fas fa-ticket-alt"></i> Tickets</a></li>
        <li><a href="#admin" data-bs-toggle="tab"><i class="fas fa-user-shield"></i> Admin Access</a></li>
        <li><a href="#validation" data-bs-toggle="tab"><i class="fas fa-check-circle"></i> Validation</a></li>
        <li class="premium"><a href="#premium" data-bs-toggle="tab"><i class="fas fa-crown"></i> Premium Features</a></li>
      </ul>
    </div>
    
    <div class="settings-main">
      <div class="tab-content">
        <!-- General Settings Tab -->
        <div class="tab-pane active" id="general">
          <div class="settings-card">
            <div class="card-header">
              <h2>General Settings</h2>
              <p>Configure basic bot behavior and appearance</p>
            </div>
            <div class="card-body">
              <form id="generalForm" action="/admin/settings/update" method="POST">
                <div class="settings-group">
                  <h3>Bot Appearance</h3>
                  
                  <div class="form-row">
                    <div class="form-group half">
                      <label for="prefix">Command Prefix</label>
                      <div class="input-wrapper">
                        <input type="text" id="prefix" name="prefix" value="<%= config.prefix %>" maxlength="3">
                        <div class="input-hint">Character that precedes all commands (e.g., "!")</div>
                      </div>
                    </div>
                    
                    <div class="form-group half">
                      <label for="embedColor">Embed Color</label>
                      <div class="color-picker-wrapper">
                        <input type="color" id="embedColor" name="embedColor" value="<%= config.embedColor %>">
                        <div class="color-preview" style="background-color: <%= config.embedColor %>"></div>
                        <div class="input-hint">Color used in message embeds</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="settings-group">
                  <h3>Bot Status</h3>
                  
                  <div class="form-row">
                    <div class="form-group third">
                      <label for="statusType">Status Type</label>
                      <div class="input-wrapper">
                        <select id="statusType" name="statusType">
                          <option value="PLAYING" <%= config.activityType === 'PLAYING' ? 'selected' : '' %>>Playing</option>
                          <option value="LISTENING" <%= config.activityType === 'LISTENING' ? 'selected' : '' %>>Listening to</option>
                          <option value="WATCHING" <%= config.activityType === 'WATCHING' ? 'selected' : '' %>>Watching</option>
                          <option value="COMPETING" <%= config.activityType === 'COMPETING' ? 'selected' : '' %>>Competing in</option>
                        </select>
                      </div>
                    </div>
                    
                    <div class="form-group two-thirds">
                      <label for="statusText">Status Text</label>
                      <div class="input-wrapper">
                        <input type="text" id="statusText" name="statusText" value="<%= config.activityName %>" placeholder="e.g., help commands">
                        <div class="input-hint">Will show as "Playing/Watching/etc [your text]"</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="action-buttons">
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Save General Settings
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        
        <!-- Logging Settings Tab -->
        <div class="tab-pane" id="logging">
          <div class="settings-card">
            <div class="card-header">
              <h2>Logging Settings</h2>
              <p>Configure channels for different types of logs</p>
            </div>
            <div class="card-body">
              <form id="loggingForm" action="/admin/settings/update-logging" method="POST">
                <div class="settings-group">
                  <h3>Main Logging Channel</h3>
                  
                  <div class="form-row">
                    <div class="form-group full">
                      <label for="logChannelId">Primary Log Channel</label>
                      <div class="input-wrapper">
                        <input type="text" id="logChannelId" name="logChannelId" value="<%= config.logChannelId %>" placeholder="Enter channel ID">
                        <div class="input-hint">Main channel for bot logs and notifications</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="settings-group">
                  <h3>Specialized Logging Channels</h3>
                  <p class="group-description">Configure separate channels for different types of logs</p>
                  
                  <div class="form-row">
                    <div class="form-group half">
                      <label for="deletedMessages">Deleted Messages</label>
                      <div class="input-wrapper">
                        <input type="text" id="deletedMessages" name="deletedMessages" value="<%= config.loggingChannels.deletedMessages %>" placeholder="Channel ID">
                        <div class="input-hint">For tracking deleted messages</div>
                      </div>
                    </div>
                    
                    <div class="form-group half">
                      <label for="editedMessages">Edited Messages</label>
                      <div class="input-wrapper">
                        <input type="text" id="editedMessages" name="editedMessages" value="<%= config.loggingChannels.editedMessages %>" placeholder="Channel ID">
                        <div class="input-hint">For tracking edited messages</div>
                      </div>
                    </div>
                  </div>
                  
                  <div class="form-row">
                    <div class="form-group half">
                      <label for="memberJoin">Member Joins/Leaves</label>
                      <div class="input-wrapper">
                        <input type="text" id="memberJoin" name="memberJoin" value="<%= config.loggingChannels.memberJoin %>" placeholder="Channel ID">
                        <div class="input-hint">For tracking member activity</div>
                      </div>
                    </div>
                    
                    <div class="form-group half">
                      <label for="moderationActions">Moderation Actions</label>
                      <div class="input-wrapper">
                        <input type="text" id="moderationActions" name="moderationActions" value="<%= config.loggingChannels.moderationActions %>" placeholder="Channel ID">
                        <div class="input-hint">For bans, kicks, mutes, etc.</div>
                      </div>
                    </div>
                  </div>
                  
                  <div class="form-row">
                    <div class="form-group half">
                      <label for="commandUsage">Command Usage</label>
                      <div class="input-wrapper">
                        <input type="text" id="commandUsage" name="commandUsage" value="<%= config.loggingChannels.commandUsage %>" placeholder="Channel ID">
                        <div class="input-hint">For tracking command usage</div>
                      </div>
                    </div>
                    
                    <div class="form-group half">
                      <label for="botStatus">Bot Status</label>
                      <div class="input-wrapper">
                        <input type="text" id="botStatus" name="botStatus" value="<%= config.loggingChannels.botStatus %>" placeholder="Channel ID">
                        <div class="input-hint">For bot status updates</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="action-buttons">
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Save Logging Settings
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        
        <!-- Tickets Settings Tab -->
        <div class="tab-pane" id="tickets">
          <div class="settings-card">
            <div class="card-header">
              <h2>Ticket System Settings</h2>
              <p>Configure the ticket system for your server</p>
            </div>
            <div class="card-body">
              <form id="ticketsForm" action="/admin/settings/update-tickets" method="POST">
                <div class="settings-group">
                  <h3>Ticket Configuration</h3>
                  
                  <div class="form-row">
                    <div class="form-group full">
                      <label for="ticketCategory">Ticket Category</label>
                      <div class="input-wrapper">
                        <input type="text" id="ticketCategory" name="ticketCategory" value="<%= config.ticketCategory %>" placeholder="Category ID">
                        <div class="input-hint">Category where ticket channels will be created</div>
                      </div>
                    </div>
                  </div>
                  
                  <div class="form-row">
                    <div class="form-group half">
                      <label for="ticketTranscripts">Transcript Channel</label>
                      <div class="input-wrapper">
                        <input type="text" id="ticketTranscripts" name="ticketTranscripts" value="<%= config.loggingChannels.ticketTranscripts %>" placeholder="Channel ID">
                        <div class="input-hint">Channel for storing ticket transcripts</div>
                      </div>
                    </div>
                    
                    <div class="form-group half">
                      <label for="maxTicketsPerUser">Max Tickets Per User</label>
                      <div class="input-wrapper">
                        <input type="number" id="maxTicketsPerUser" name="maxTicketsPerUser" value="<%= config.maxTicketsPerUser || 3 %>" min="1" max="10">
                        <div class="input-hint">Maximum concurrent tickets per user</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="settings-group">
                  <h3>Ticket Types</h3>
                  <p class="group-description">Configure the types of tickets users can create</p>
                  
                  <div class="ticket-types-list">
                    <% const ticketTypes = config.ticketTypes || ['Support', 'Report', 'Suggestion', 'Other']; %>
                    <% ticketTypes.forEach((type, i) => { %>
                      <div class="ticket-type-item">
                        <input type="text" name="ticketType<%= i %>" value="<%= type %>" placeholder="Ticket type">
                        <% if (i > 0) { %>
                          <button type="button" class="btn btn-icon btn-danger remove-type"><i class="fas fa-trash-alt"></i></button>
                        <% } %>
                      </div>
                    <% }) %>
                    <button type="button" class="btn btn-sm btn-outline add-ticket-type" disabled>
                      <i class="fas fa-plus-circle"></i> Add Ticket Type
                    </button>
                    <div class="input-hint">Ticket type management will be available in a future update</div>
                  </div>
                </div>
                
                <div class="action-buttons">
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Save Ticket Settings
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        
        <!-- Admin Access Tab -->
        <div class="tab-pane" id="admin">
          <div class="settings-card">
            <div class="card-header">
              <h2>Admin Access Settings</h2>
              <p>Configure which users have access to the bot admin panel</p>
            </div>
            <div class="card-body">
              <div class="settings-group">
                <h3>Admin Users</h3>
                <p class="group-description">Users with full access to the admin dashboard</p>
                
                <div class="admin-users-list">
                  <% for (const userId of config.adminUserIds) { %>
                    <div class="admin-user-item">
                      <div class="admin-user-info">
                        <div class="admin-user-id"><%= userId %></div>
                        <div class="admin-user-role">Full Administrator</div>
                      </div>
                      <form action="/admin/users/remove" method="POST" class="inline-form">
                        <input type="hidden" name="userId" value="<%= userId %>">
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to remove this admin user? They will lose access to the dashboard.')">
                          <i class="fas fa-trash-alt"></i> Remove
                        </button>
                      </form>
                    </div>
                  <% } %>
                </div>
                
                <div class="add-admin-section">
                  <h4>Add New Admin User</h4>
                  <form action="/admin/users/add" method="POST">
                    <div class="form-row">
                      <div class="form-group half">
                        <label for="userId">Discord User ID</label>
                        <div class="input-wrapper">
                          <input type="text" id="userId" name="userId" placeholder="Enter Discord ID" pattern="^\d{17,19}$" required>
                          <div class="input-hint">User's Discord ID (17-19 digits)</div>
                        </div>
                      </div>
                      
                      <div class="form-group half">
                        <label for="comment">User Description</label>
                        <div class="input-wrapper">
                          <input type="text" id="comment" name="comment" placeholder="e.g. Moderator, Developer" required>
                          <div class="input-hint">Description or role of this administrator</div>
                        </div>
                      </div>
                    </div>
                    
                    <div class="action-buttons">
                      <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus-circle"></i> Add Admin User
                      </button>
                    </div>
                  </form>
                </div>
              </div>
              
              <div class="settings-group">
                <h3>Staff Roles</h3>
                <p class="group-description">Discord roles that have access to certain bot commands</p>
                
                <div class="staff-roles-list">
                  <% config.staffRoles.forEach(role => { %>
                    <div class="staff-role-item">
                      <span class="role-id"><%= role %></span>
                      <button class="btn btn-icon btn-danger remove-role" disabled><i class="fas fa-times"></i></button>
                    </div>
                  <% }); %>
                </div>
                
                <div class="add-role-section">
                  <div class="form-row">
                    <div class="form-group three-fourths">
                      <input type="text" placeholder="Add role by ID" disabled>
                    </div>
                    <div class="form-group fourth">
                      <button class="btn btn-outline-primary" disabled><i class="fas fa-plus"></i> Add</button>
                    </div>
                  </div>
                  <div class="input-hint">Staff role management will be implemented in a future update</div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Validation Settings Tab -->
        <div class="tab-pane" id="validation">
          <div class="settings-card">
            <div class="card-header">
              <h2>Validation Settings</h2>
              <p>Configure limits and validation for various bot features</p>
            </div>
            <div class="card-body">
              <form id="validationForm" action="/admin/settings/update-validation" method="POST">
                <div class="settings-group">
                  <h3>Bounty System</h3>
                  <p class="group-description">Configure limits for the bounty system</p>
                  
                  <div class="form-row">
                    <div class="form-group half">
                      <label for="bountyMin">Minimum Bounty</label>
                      <div class="input-wrapper">
                        <input type="number" id="bountyMin" name="bountyMin" value="<%= config.validation.bountyMin %>" min="1">
                        <div class="input-hint">Minimum amount allowed for bounties</div>
                      </div>
                    </div>
                    
                    <div class="form-group half">
                      <label for="bountyMax">Maximum Bounty</label>
                      <div class="input-wrapper">
                        <input type="number" id="bountyMax" name="bountyMax" value="<%= config.validation.bountyMax %>" min="100">
                        <div class="input-hint">Maximum amount allowed for bounties</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="settings-group">
                  <h3>Message Limits</h3>
                  <p class="group-description">Configure message length limitations</p>
                  
                  <div class="form-row">
                    <div class="form-group third">
                      <label for="maxWarningLength">Warning Reason</label>
                      <div class="input-wrapper">
                        <input type="number" id="maxWarningLength" name="maxWarningLength" value="<%= config.validation.maxWarningLength || 100 %>" min="50" max="500">
                        <div class="input-hint">Max characters for warning reasons</div>
                      </div>
                    </div>
                    
                    <div class="form-group third">
                      <label for="maxTicketLength">Ticket Subject</label>
                      <div class="input-wrapper">
                        <input type="number" id="maxTicketLength" name="maxTicketLength" value="<%= config.validation.maxTicketLength || 100 %>" min="50" max="200">
                        <div class="input-hint">Max characters for ticket subjects</div>
                      </div>
                    </div>
                    
                    <div class="form-group third">
                      <label for="maxRoleNameLength">Role Names</label>
                      <div class="input-wrapper">
                        <input type="number" id="maxRoleNameLength" name="maxRoleNameLength" value="<%= config.validation.maxRoleNameLength || 30 %>" min="10" max="100">
                        <div class="input-hint">Max characters for role names</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="action-buttons">
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Save Validation Settings
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        
        <!-- Premium Features Tab -->
        <div class="tab-pane" id="premium">
          <div class="settings-card premium-card">
            <div class="card-header">
              <h2>Premium Features</h2>
              <p>Advanced features available with premium subscription</p>
              <div class="premium-badge">Premium Only</div>
            </div>
            <div class="card-body">
              <div class="premium-info">
                <div class="premium-icon"><i class="fas fa-crown"></i></div>
                <h3>Unlock Premium Features</h3>
                <p>Get access to advanced features by upgrading to SWOOSH Premium</p>
                <ul class="premium-features">
                  <li><i class="fas fa-check"></i> Custom welcome messages</li>
                  <li><i class="fas fa-check"></i> Advanced automod settings</li>
                  <li><i class="fas fa-check"></i> Role reaction system</li>
                  <li><i class="fas fa-check"></i> Voice channel management</li>
                  <li><i class="fas fa-check"></i> Custom commands</li>
                </ul>
                <a href="#" class="btn btn-premium">Upgrade to Premium</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Settings Layout */
  .settings-container {
    max-width: 100%;
    margin: 0 auto;
  }
  
  .settings-content {
    display: flex;
    gap: 25px;
    margin-top: 20px;
  }
  
  .settings-sidebar {
    width: 250px;
    flex-shrink: 0;
    background: var(--card-bg);
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    height: fit-content;
    position: sticky;
    top: 20px;
  }
  
  .settings-main {
    flex: 1;
    min-width: 0;
  }
  
  .sidebar-header {
    padding: 15px 20px;
    border-bottom: 1px solid var(--border-color);
  }
  
  .sidebar-header h3 {
    margin: 0;
    font-size: 1.2rem;
    font-weight: 600;
  }
  
  .sidebar-nav {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .sidebar-nav li {
    margin: 0;
  }
  
  .sidebar-nav li a {
    display: flex;
    align-items: center;
    padding: 12px 20px;
    color: var(--text-muted);
    text-decoration: none;
    border-left: 3px solid transparent;
    transition: all 0.2s;
  }
  
  .sidebar-nav li a:hover {
    background: rgba(156, 77, 255, 0.05);
    color: var(--text-primary);
  }
  
  .sidebar-nav li.active a {
    background: rgba(156, 77, 255, 0.1);
    color: #9c4dff;
    border-left-color: #9c4dff;
    font-weight: 500;
  }
  
  .sidebar-nav li a i {
    margin-right: 10px;
    width: 16px;
    text-align: center;
  }
  
  .sidebar-nav li.premium a {
    color: #f7b731;
  }
  
  .sidebar-nav li.premium.active a {
    background: rgba(247, 183, 49, 0.1);
    border-left-color: #f7b731;
  }
  
  /* Settings Cards */
  .settings-card {
    background: var(--card-bg);
    border-radius: 10px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 25px;
    overflow: hidden;
  }
  
  .settings-card .card-header {
    padding: 20px 25px;
    border-bottom: 1px solid var(--border-color);
    background: var(--card-header-bg);
    position: relative;
  }
  
  .settings-card .card-header h2 {
    margin: 0 0 5px 0;
    font-size: 1.3rem;
    font-weight: 600;
  }
  
  .settings-card .card-header p {
    margin: 0;
    color: var(--text-muted);
    font-size: 0.9rem;
  }
  
  .settings-card .card-body {
    padding: 25px;
  }
  
  /* Form Elements */
  .settings-group {
    margin-bottom: 25px;
    padding-bottom: 25px;
    border-bottom: 1px solid var(--border-color);
  }
  
  .settings-group:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
  }
  
  .settings-group h3 {
    margin: 0 0 15px 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  .group-description {
    margin: -10px 0 15px 0;
    color: var(--text-muted);
    font-size: 0.9rem;
  }
  
  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -10px 15px -10px;
  }
  
  .form-row:last-child {
    margin-bottom: 0;
  }
  
  .form-group {
    padding: 0 10px;
    margin-bottom: 15px;
  }
  
  .form-group.full {
    width: 100%;
  }
  
  .form-group.half {
    width: 50%;
  }
  
  .form-group.third {
    width: 33.333%;
  }
  
  .form-group.two-thirds {
    width: 66.666%;
  }
  
  .form-group.fourth {
    width: 25%;
  }
  
  .form-group.three-fourths {
    width: 75%;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--text-primary);
  }
  
  .input-wrapper {
    position: relative;
  }
  
  .form-group input,
  .form-group select {
    width: 100%;
    padding: 10px 12px;
    border: 1px solid var(--border-color);
    border-radius: 6px;
    font-size: 14px;
    background: var(--input-bg);
    color: var(--text-primary);
    transition: border-color 0.2s;
  }
  
  .form-group input:focus,
  .form-group select:focus {
    border-color: #9c4dff;
    outline: none;
    box-shadow: 0 0 0 3px rgba(156, 77, 255, 0.1);
  }
  
  .input-hint {
    font-size: 12px;
    color: var(--text-muted);
    margin-top: 5px;
  }
  
  /* Actions */
  .action-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
  }
  
  /* Admin Users */
  .admin-users-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 20px;
  }
  
  .admin-user-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 15px;
    background: var(--bg-light);
    border-radius: 6px;
    border-left: 3px solid #9c4dff;
  }
  
  .admin-user-info {
    display: flex;
    flex-direction: column;
  }
  
  .admin-user-id {
    font-weight: 600;
    font-family: monospace;
  }
  
  .admin-user-role {
    font-size: 0.85rem;
    color: var(--text-muted);
  }
  
  /* Staff Roles */
  .staff-roles-list {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 15px;
  }
  
  .staff-role-item {
    display: flex;
    align-items: center;
    background: var(--bg-light);
    padding: 8px 12px;
    border-radius: 50px;
    border: 1px solid var(--border-color);
  }
  
  .role-id {
    font-family: monospace;
    margin-right: 8px;
  }
  
  .add-role-section {
    margin-top: 15px;
  }
  
  /* Ticket Types */
  .ticket-types-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .ticket-type-item {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .ticket-type-item input {
    flex: 1;
  }
  
  .add-ticket-type {
    margin-top: 10px;
    align-self: flex-start;
  }
  
  /* Color Picker */
  .color-picker-wrapper {
    display: flex;
    align-items: center;
  }
  
  .color-picker-wrapper input[type="color"] {
    height: 40px;
    width: 40px;
    padding: 0;
    border: none;
    border-radius: 4px;
    overflow: hidden;
    cursor: pointer;
  }
  
  .color-preview {
    width: 20px;
    height: 20px;
    border-radius: 4px;
    margin: 0 10px;
    box-shadow: 0 0 0 1px rgba(0,0,0,0.1);
  }
  
  /* Alerts */
  .alert-toast {
    display: flex;
    align-items: center;
    padding: 12px 15px;
    border-radius: 6px;
    margin-bottom: 20px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  }
  
  .alert-toast.success {
    background: #ecfdf5;
    border-left: 4px solid #10b981;
  }
  
  .alert-toast.error {
    background: #fef2f2;
    border-left: 4px solid #ef4444;
  }
  
  .alert-toast .alert-icon {
    margin-right: 12px;
    font-size: 1.2rem;
  }
  
  .alert-toast.success .alert-icon {
    color: #10b981;
  }
  
  .alert-toast.error .alert-icon {
    color: #ef4444;
  }
  
  .alert-toast .alert-content {
    flex: 1;
  }
  
  .alert-toast .alert-content p {
    margin: 0;
    color: var(--text-primary);
  }
  
  .alert-toast .alert-close {
    background: none;
    border: none;
    cursor: pointer;
    color: var(--text-muted);
    font-size: 0.9rem;
    padding: 5px;
  }
  
  /* Premium */
  .premium-card {
    border: 1px solid #f7b731;
    box-shadow: 0 4px 10px rgba(247, 183, 49, 0.1);
  }
  
  .premium-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #f7b731;
    color: #000;
    font-size: 0.75rem;
    font-weight: 600;
    padding: 3px 8px;
    border-radius: 20px;
  }
  
  .premium-info {
    text-align: center;
    padding: 20px 0;
  }
  
  .premium-icon {
    font-size: 3rem;
    color: #f7b731;
    margin-bottom: 15px;
  }
  
  .premium-info h3 {
    margin-bottom: 10px;
    font-size: 1.5rem;
  }
  
  .premium-info p {
    color: var(--text-muted);
    margin-bottom: 20px;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .premium-features {
    list-style: none;
    padding: 0;
    max-width: 300px;
    margin: 0 auto 25px auto;
    text-align: left;
  }
  
  .premium-features li {
    padding: 8px 0;
    border-bottom: 1px solid var(--border-color);
  }
  
  .premium-features li:last-child {
    border-bottom: none;
  }
  
  .premium-features li i {
    color: #10b981;
    margin-right: 8px;
  }
  
  .btn-premium {
    display: inline-block;
    background: linear-gradient(45deg, #f7b731, #ffcc00);
    color: #000;
    font-weight: 600;
    padding: 10px 20px;
    border-radius: 30px;
    text-decoration: none;
    box-shadow: 0 4px 10px rgba(247, 183, 49, 0.2);
    transition: all 0.2s;
  }
  
  .btn-premium:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(247, 183, 49, 0.25);
  }
  
  /* Responsive */
  @media (max-width: 992px) {
    .settings-content {
      flex-direction: column;
    }
    
    .settings-sidebar {
      width: 100%;
      position: static;
      margin-bottom: 20px;
    }
    
    .sidebar-nav {
      display: flex;
      overflow-x: auto;
      padding-bottom: 5px;
    }
    
    .sidebar-nav li a {
      white-space: nowrap;
      border-left: none;
      border-bottom: 3px solid transparent;
    }
    
    .sidebar-nav li.active a {
      border-left-color: transparent;
      border-bottom-color: #9c4dff;
    }
    
    .sidebar-header {
      display: none;
    }
  }
  
  @media (max-width: 768px) {
    .form-group.half, 
    .form-group.third, 
    .form-group.two-thirds,
    .form-group.fourth,
    .form-group.three-fourths {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Tab switching
    const tabs = document.querySelectorAll('.sidebar-nav li a');
    tabs.forEach(tab => {
      tab.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Remove active class from all tabs
        document.querySelectorAll('.sidebar-nav li').forEach(item => {
          item.classList.remove('active');
        });
        
        // Add active class to clicked tab
        this.parentElement.classList.add('active');
        
        // Hide all tab panes
        document.querySelectorAll('.tab-pane').forEach(pane => {
          pane.classList.remove('active');
        });
        
        // Show the corresponding tab pane
        const target = this.getAttribute('href').substring(1);
        document.getElementById(target).classList.add('active');
      });
    });
    
    // Form validation
    const bountyMinInput = document.getElementById('bountyMin');
    const bountyMaxInput = document.getElementById('bountyMax');
    
    if (bountyMinInput && bountyMaxInput) {
      bountyMinInput.addEventListener('change', validateBountyLimits);
      bountyMaxInput.addEventListener('change', validateBountyLimits);
    }
    
    function validateBountyLimits() {
      const min = parseInt(bountyMinInput.value);
      const max = parseInt(bountyMaxInput.value);
      
      if (min >= max) {
        alert('Minimum bounty must be less than maximum bounty');
        bountyMinInput.value = <%= config.validation.bountyMin %>;
        bountyMaxInput.value = <%= config.validation.bountyMax %>;
      }
    }
    
    // Form submission confirmation
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        if (!confirm('Are you sure you want to save these changes? This may restart the bot.')) {
          e.preventDefault();
        }
      });
    });
  });
</script>

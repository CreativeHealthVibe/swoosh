<div class="settings-container">
  <div class="page-header">
    <h1 class="page-title">Bot Settings</h1>
    <p class="page-subtitle">Configure the behavior and appearance of your Discord bot</p>
  </div>
  
  <% if (messages.success) { %>
  <div class="alert-toast success">
    <div class="alert-icon"><i class="fas fa-check-circle"></i></div>
    <div class="alert-content">
      <p><%= messages.success %></p>
    </div>
    <button class="alert-close" onclick="this.parentElement.remove()"><i class="fas fa-times"></i></button>
  </div>
  <% } %>
  
  <% if (messages.error) { %>
  <div class="alert-toast error">
    <div class="alert-icon"><i class="fas fa-exclamation-circle"></i></div>
    <div class="alert-content">
      <p><%= messages.error %></p>
    </div>
    <button class="alert-close" onclick="this.parentElement.remove()"><i class="fas fa-times"></i></button>
  </div>
  <% } %>

  <div class="settings-grid">
    <!-- General Settings -->
    <div class="custom-card gradient-border">
      <div class="card-header-custom">
        <div class="d-flex align-items-center">
          <div class="header-icon">
            <i class="fas fa-cog"></i>
          </div>
          <h2 class="card-title ms-2">General Settings</h2>
        </div>
      </div>
      <div class="card-body-custom">
        <form id="botSettingsForm" action="/admin/settings/update" method="POST">
          <div class="settings-section">
            <div class="settings-row">
              <div class="setting-item">
                <label for="prefix" class="setting-label">Command Prefix</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-at"></i></div>
                  <input type="text" class="setting-input" id="prefix" name="prefix" value="<%= config.prefix %>" maxlength="3">
                </div>
                <div class="setting-help">The character that triggers bot commands (e.g., !help)</div>
              </div>
              
              <div class="setting-item">
                <label for="embedColor" class="setting-label">Embed Color</label>
                <div class="color-picker-container">
                  <input type="color" class="color-picker" id="embedColor" name="embedColor" value="<%= config.embedColor %>">
                  <span class="color-value"><%= config.embedColor %></span>
                </div>
                <div class="setting-help">The color used for message embeds and UI elements</div>
              </div>
            </div>
            
            <div class="settings-row">
              <div class="setting-item">
                <label for="ticketCategory" class="setting-label">Ticket Category</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-layer-group"></i></div>
                  <input type="text" class="setting-input" id="ticketCategory" name="ticketCategory" value="<%= config.ticketCategory %>">
                </div>
                <div class="setting-help">Discord category where new tickets will be created</div>
              </div>
              
              <div class="setting-item">
                <label for="logChannelId" class="setting-label">Main Log Channel</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-hashtag"></i></div>
                  <input type="text" class="setting-input" id="logChannelId" name="logChannelId" value="<%= config.logChannelId %>" placeholder="Discord Channel ID">
                </div>
                <div class="setting-help">Primary channel for sending bot logs</div>
              </div>
            </div>
          </div>
          
          <div class="section-divider">
            <span>Logging Channels</span>
          </div>
          
          <div class="settings-section">
            <div class="settings-row">
              <div class="setting-item">
                <label for="deletedMessages" class="setting-label">Deleted Messages</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-trash-alt"></i></div>
                  <input type="text" class="setting-input" id="deletedMessages" name="deletedMessages" value="<%= config.loggingChannels.deletedMessages %>" placeholder="Channel ID">
                </div>
                <div class="setting-help">Channel for tracking deleted messages</div>
              </div>
              
              <div class="setting-item">
                <label for="ticketTranscripts" class="setting-label">Ticket Transcripts</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-file-alt"></i></div>
                  <input type="text" class="setting-input" id="ticketTranscripts" name="ticketTranscripts" value="<%= config.loggingChannels.ticketTranscripts %>" placeholder="Channel ID">
                </div>
                <div class="setting-help">Channel for saving ticket conversation history</div>
              </div>
            </div>
            
            <div class="settings-row">
              <div class="setting-item">
                <label for="commandUsage" class="setting-label">Command Usage</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-terminal"></i></div>
                  <input type="text" class="setting-input" id="commandUsage" name="commandUsage" value="<%= config.loggingChannels.commandUsage %>" placeholder="Channel ID">
                </div>
                <div class="setting-help">Channel for tracking command executions</div>
              </div>
              
              <div class="setting-item">
                <label for="botStatus" class="setting-label">Bot Status</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-heartbeat"></i></div>
                  <input type="text" class="setting-input" id="botStatus" name="botStatus" value="<%= config.loggingChannels.botStatus %>" placeholder="Channel ID">
                </div>
                <div class="setting-help">Channel for bot status and uptime notifications</div>
              </div>
            </div>
          </div>
          
          <div class="section-divider">
            <span>Validation</span>
          </div>
          
          <div class="settings-section">
            <div class="settings-row">
              <div class="setting-item">
                <label for="bountyMin" class="setting-label">Minimum Bounty</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-coins"></i></div>
                  <input type="number" class="setting-input" id="bountyMin" name="bountyMin" value="<%= config.validation.bountyMin %>" min="1">
                </div>
                <div class="setting-help">Minimum allowed bounty amount</div>
              </div>
              
              <div class="setting-item">
                <label for="bountyMax" class="setting-label">Maximum Bounty</label>
                <div class="setting-input-wrapper">
                  <div class="setting-icon"><i class="fas fa-gem"></i></div>
                  <input type="number" class="setting-input" id="bountyMax" name="bountyMax" value="<%= config.validation.bountyMax %>" min="100">
                </div>
                <div class="setting-help">Maximum allowed bounty amount</div>
              </div>
            </div>
          </div>
          
          <div class="settings-actions">
            <button type="submit" class="btn-save">
              <i class="fas fa-save me-2"></i> Save Configuration
            </button>
            <button type="reset" class="btn-reset">
              <i class="fas fa-undo me-2"></i> Reset
            </button>
          </div>
        </form>
      </div>
    </div>
    
    <!-- Bot Management -->
    <div class="custom-card gradient-border">
      <div class="card-header-custom">
        <div class="d-flex align-items-center">
          <div class="header-icon">
            <i class="fas fa-robot"></i>
          </div>
          <h2 class="card-title ms-2">Bot Management</h2>
        </div>
      </div>
      <div class="card-body-custom">
        <div class="management-section">
          <div class="server-list">
            <h3 class="section-title">Connected Servers</h3>
            <p class="section-description">Manage the servers where your bot is active</p>
            
            <div class="server-list-container">
              <% if (typeof memberData !== 'undefined' && memberData.length > 0) { %>
                <% memberData.forEach(server => { %>
                  <div class="server-item">
                    <div class="server-icon">
                      <% if (server.iconURL) { %>
                        <img src="<%= server.iconURL %>" alt="<%= server.name %>" />
                      <% } else { %>
                        <div class="server-icon-placeholder">
                          <%= server.name.charAt(0) %>
                        </div>
                      <% } %>
                    </div>
                    <div class="server-info">
                      <h4 class="server-name"><%= server.name %></h4>
                      <div class="server-meta">
                        <span><i class="fas fa-users"></i> <%= server.totalMembers %> members</span>
                        <span><i class="fas fa-globe"></i> <%= server.region %></span>
                      </div>
                    </div>
                    <div class="server-actions">
                      <button class="btn-remove-server" data-server-id="<%= server.id %>" disabled>
                        <i class="fas fa-sign-out-alt"></i> Leave
                      </button>
                    </div>
                  </div>
                <% }); %>
              <% } else { %>
                <div class="empty-state">
                  <div class="empty-icon">
                    <i class="fas fa-server"></i>
                  </div>
                  <p>No server data available</p>
                  <small>Server information will appear here when connected to Discord</small>
                </div>
              <% } %>
            </div>
            <div class="server-management-notice">
              <i class="fas fa-info-circle"></i>
              <p>Server management features will be available in the next update.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Admin Access -->
    <div class="custom-card gradient-border">
      <div class="card-header-custom">
        <div class="d-flex align-items-center">
          <div class="header-icon">
            <i class="fas fa-shield-alt"></i>
          </div>
          <h2 class="card-title ms-2">Admin Access</h2>
        </div>
      </div>
      <div class="card-body-custom">
        <h3 class="section-title">Admin Users</h3>
        <p class="section-description">Users with full access to the admin dashboard</p>
        
        <div class="admin-users-grid">
          <% config.adminUserIds.forEach(userId => { %>
            <div class="admin-user-card">
              <div class="admin-user-avatar">
                <i class="fas fa-user-shield"></i>
              </div>
              <div class="admin-user-info">
                <div class="admin-user-id"><%= userId %></div>
                <div class="admin-user-role">Full Administrator</div>
              </div>
              <% if (userId !== user.id) { %>
                <form action="/admin/users/remove" method="POST" class="admin-user-actions">
                  <input type="hidden" name="userId" value="<%= userId %>">
                  <button type="submit" class="btn-remove-admin">
                    <i class="fas fa-user-minus"></i>
                  </button>
                </form>
              <% } else { %>
                <div class="admin-user-self-tag">You</div>
              <% } %>
            </div>
          <% }); %>
          
          <div class="admin-user-add-card">
            <form action="/admin/users/add" method="POST" class="admin-add-form">
              <div class="add-admin-input-group">
                <input type="text" name="userId" placeholder="Discord User ID" required class="add-admin-input">
                <input type="text" name="comment" placeholder="User Description" required class="add-admin-input">
              </div>
              <button type="submit" class="btn-add-admin">
                <i class="fas fa-user-plus"></i> Add Admin
              </button>
            </form>
          </div>
        </div>
        
        <% if (user.username === 'gh_sman' || user.id === '1176864029102473267') { %>
          <div class="special-admin-actions">
            <button class="btn-special-action">
              <i class="fas fa-crown"></i> Create Special Admin Account
            </button>
            <div class="setting-help">This special action is only available to you</div>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<style>
  .settings-container {
    padding: 1.5rem;
  }
  
  .page-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .page-title {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    background: linear-gradient(135deg, #9c4dff, #26d0ce);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }
  
  .page-subtitle {
    color: rgba(255, 255, 255, 0.7);
    font-size: 1rem;
  }
  
  .settings-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .custom-card {
    background: rgba(30, 30, 40, 0.7);
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    position: relative;
    backdrop-filter: blur(10px);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .gradient-border {
    position: relative;
    z-index: 0;
    border-radius: 10px;
    padding: 1px;
  }
  
  .gradient-border::before {
    content: '';
    position: absolute;
    z-index: -1;
    inset: 0;
    border-radius: 10px;
    padding: 1px;
    background: linear-gradient(135deg, #9c4dff, #26d0ce);
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
  
  .card-header-custom {
    background: rgba(20, 20, 30, 0.5);
    padding: 1.25rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .card-body-custom {
    padding: 1.5rem;
  }
  
  .card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: #fff;
  }
  
  .header-icon {
    width: 32px;
    height: 32px;
    border-radius: 8px;
    background: linear-gradient(135deg, #9c4dff, #26d0ce);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
  }
  
  .settings-section {
    margin-bottom: 1.5rem;
  }
  
  .settings-row {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 1rem;
  }
  
  .setting-item {
    margin-bottom: 1.5rem;
  }
  
  .setting-label {
    display: block;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: rgba(255, 255, 255, 0.9);
  }
  
  .setting-input-wrapper {
    display: flex;
    align-items: center;
    background: rgba(40, 40, 50, 0.6);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .setting-input-wrapper:focus-within {
    border-color: #9c4dff;
    box-shadow: 0 0 0 2px rgba(156, 77, 255, 0.2);
  }
  
  .setting-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 42px;
    color: rgba(255, 255, 255, 0.7);
    background: rgba(50, 50, 60, 0.6);
    height: 42px;
  }
  
  .setting-input {
    flex: 1;
    background: transparent;
    border: none;
    color: white;
    padding: 0.75rem 1rem;
    font-size: 0.95rem;
    outline: none;
  }
  
  .setting-help {
    font-size: 0.8rem;
    color: rgba(255, 255, 255, 0.5);
    margin-top: 0.5rem;
  }
  
  .color-picker-container {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .color-picker {
    width: 42px;
    height: 42px;
    border: none;
    border-radius: 8px;
    background: none;
    cursor: pointer;
    overflow: hidden;
  }
  
  .color-picker::-webkit-color-swatch-wrapper {
    padding: 0;
  }
  
  .color-picker::-webkit-color-swatch {
    border: none;
    border-radius: 8px;
  }
  
  .color-value {
    padding: 0.5rem 1rem;
    background: rgba(40, 40, 50, 0.6);
    border-radius: 6px;
    color: white;
    font-family: monospace;
    font-size: 0.9rem;
  }
  
  .section-divider {
    display: flex;
    align-items: center;
    margin: 2rem 0;
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .section-divider::before,
  .section-divider::after {
    content: '';
    flex: 1;
    height: 1px;
    background: rgba(255, 255, 255, 0.1);
  }
  
  .section-divider::before {
    margin-right: 1rem;
  }
  
  .section-divider::after {
    margin-left: 1rem;
  }
  
  .settings-actions {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }
  
  .btn-save,
  .btn-reset {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .btn-save {
    background: linear-gradient(135deg, #9c4dff, #26d0ce);
    color: white;
    flex: 2;
  }
  
  .btn-save:hover {
    opacity: 0.9;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(156, 77, 255, 0.3);
  }
  
  .btn-reset {
    background: rgba(40, 40, 50, 0.6);
    color: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.1);
    flex: 1;
  }
  
  .btn-reset:hover {
    background: rgba(50, 50, 60, 0.6);
  }
  
  .alert-toast {
    display: flex;
    align-items: center;
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    animation: slideIn 0.3s ease;
  }
  
  @keyframes slideIn {
    from {
      transform: translateY(-20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  .alert-toast.success {
    background: rgba(22, 163, 74, 0.2);
    border-left: 4px solid #16a34a;
  }
  
  .alert-toast.error {
    background: rgba(220, 38, 38, 0.2);
    border-left: 4px solid #dc2626;
  }
  
  .alert-icon {
    margin-right: 1rem;
    font-size: 1.25rem;
  }
  
  .success .alert-icon {
    color: #16a34a;
  }
  
  .error .alert-icon {
    color: #dc2626;
  }
  
  .alert-content {
    flex: 1;
  }
  
  .alert-content p {
    margin: 0;
    color: white;
  }
  
  .alert-close {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    cursor: pointer;
    padding: 0.5rem;
  }
  
  .alert-close:hover {
    color: white;
  }
  
  /* Bot Management Styles */
  .management-section {
    margin-bottom: 1.5rem;
  }
  
  .section-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: white;
    margin-bottom: 0.5rem;
  }
  
  .section-description {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    margin-bottom: 1.5rem;
  }
  
  .server-list-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1.5rem;
    max-height: 400px;
    overflow-y: auto;
    padding-right: 0.5rem;
  }
  
  .server-list-container::-webkit-scrollbar {
    width: 8px;
  }
  
  .server-list-container::-webkit-scrollbar-thumb {
    background: rgba(156, 77, 255, 0.3);
    border-radius: 10px;
  }
  
  .server-list-container::-webkit-scrollbar-track {
    background: rgba(30, 30, 40, 0.3);
    border-radius: 10px;
  }
  
  .server-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    background: rgba(40, 40, 50, 0.6);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: all 0.2s ease;
  }
  
  .server-item:hover {
    background: rgba(50, 50, 60, 0.6);
    transform: translateY(-2px);
  }
  
  .server-icon {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    overflow: hidden;
    margin-right: 1rem;
    flex-shrink: 0;
  }
  
  .server-icon img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .server-icon-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #9c4dff, #26d0ce);
    color: white;
    font-weight: bold;
    font-size: 1.5rem;
  }
  
  .server-info {
    flex: 1;
    min-width: 0;
  }
  
  .server-name {
    font-weight: 600;
    color: white;
    margin: 0 0 0.25rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .server-meta {
    display: flex;
    gap: 1rem;
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.85rem;
  }
  
  .server-meta span {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .server-actions {
    margin-left: 1rem;
  }
  
  .btn-remove-server {
    background: rgba(220, 38, 38, 0.1);
    color: #ef4444;
    border: 1px solid rgba(220, 38, 38, 0.2);
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .btn-remove-server:hover {
    background: rgba(220, 38, 38, 0.2);
  }
  
  .btn-remove-server:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
  
  .server-management-notice {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background: rgba(236, 72, 153, 0.1);
    border-left: 3px solid #ec4899;
    border-radius: 6px;
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
  }
  
  .empty-state {
    text-align: center;
    padding: 3rem 2rem;
    color: rgba(255, 255, 255, 0.7);
  }
  
  .empty-icon {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    color: rgba(156, 77, 255, 0.7);
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background: rgba(156, 77, 255, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1.5rem;
  }
  
  /* Admin Users Styles */
  .admin-users-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
  }
  
  .admin-user-card {
    position: relative;
    background: rgba(40, 40, 50, 0.6);
    border-radius: 8px;
    padding: 1.25rem;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }
  
  .admin-user-card:hover {
    background: rgba(50, 50, 60, 0.6);
    transform: translateY(-2px);
  }
  
  .admin-user-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: linear-gradient(135deg, #9c4dff, #26d0ce);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 1rem;
    color: white;
    font-size: 1.25rem;
  }
  
  .admin-user-info {
    flex: 1;
    overflow: hidden;
  }
  
  .admin-user-id {
    font-weight: 600;
    color: white;
    margin-bottom: 0.25rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .admin-user-role {
    font-size: 0.85rem;
    color: #9c4dff;
  }
  
  .admin-user-actions {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
  }
  
  .btn-remove-admin {
    width: 28px;
    height: 28px;
    border-radius: 6px;
    background: rgba(220, 38, 38, 0.1);
    color: #ef4444;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .btn-remove-admin:hover {
    background: rgba(220, 38, 38, 0.2);
  }
  
  .admin-user-self-tag {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background: rgba(156, 77, 255, 0.2);
    color: #9c4dff;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 600;
  }
  
  .admin-user-add-card {
    background: rgba(22, 163, 74, 0.1);
    border: 1px dashed rgba(22, 163, 74, 0.3);
    border-radius: 8px;
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }
  
  .admin-user-add-card:hover {
    background: rgba(22, 163, 74, 0.15);
  }
  
  .admin-add-form {
    width: 100%;
  }
  
  .add-admin-input-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }
  
  .add-admin-input {
    padding: 0.75rem 1rem;
    border-radius: 6px;
    background: rgba(40, 40, 50, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: white;
    outline: none;
    transition: all 0.3s ease;
  }
  
  .add-admin-input:focus {
    border-color: #16a34a;
    box-shadow: 0 0 0 2px rgba(22, 163, 74, 0.2);
  }
  
  .btn-add-admin {
    width: 100%;
    padding: 0.75rem;
    background: #16a34a;
    color: white;
    border: none;
    border-radius: 6px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .btn-add-admin:hover {
    background: #15803d;
  }
  
  .special-admin-actions {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    text-align: center;
  }
  
  .btn-special-action {
    background: linear-gradient(135deg, #f59e0b, #ef4444);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    border: none;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .btn-special-action:hover {
    opacity: 0.9;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
  }
  
  @media (max-width: 768px) {
    .settings-container {
      padding: 1rem;
    }
    
    .page-title {
      font-size: 1.75rem;
    }
    
    .settings-row {
      grid-template-columns: 1fr;
    }
    
    .admin-users-grid {
      grid-template-columns: 1fr;
    }
    
    .settings-actions {
      flex-direction: column;
    }
    
    .btn-save, .btn-reset {
      width: 100%;
    }
  }
</style>

<script>
  // Color picker value update
  document.getElementById('embedColor').addEventListener('input', function(e) {
    document.querySelector('.color-value').textContent = e.target.value;
  });
  
  // Form validation
  document.getElementById('botSettingsForm').addEventListener('submit', function(e) {
    const bountyMin = parseInt(document.getElementById('bountyMin').value);
    const bountyMax = parseInt(document.getElementById('bountyMax').value);
    
    if (bountyMin >= bountyMax) {
      e.preventDefault();
      alert('Minimum bounty must be less than maximum bounty');
      return false;
    }
    
    if (!confirm('Are you sure you want to update the bot configuration? This will restart the bot.')) {
      e.preventDefault();
      return false;
    }
    
    return true;
  });
  
  // Special button action for gh_sman
  const specialButton = document.querySelector('.btn-special-action');
  if (specialButton) {
    specialButton.addEventListener('click', function() {
      // This would be implemented in a future update
      alert('Special admin creation feature coming soon!');
    });
  }
</script>